{"ast":null,"code":"import _regeneratorRuntime from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/usuario/Escritorio/csd-bridge-ui/src/components/Bridge.js\";\n\nimport BN from \"bignumber.js\";\nimport React from \"react\";\nimport { toHex } from \"web3-utils\";\nimport foreignLogoPurple from \"../assets/images/logos/logo-poa-20-purple@2x.png\";\nimport homeLogoPurple from \"../assets/images/logos/logo-poa-sokol-purple@2x.png\";\nimport swal from \"sweetalert\";\nimport { BRIDGE_MODES, ERC_TYPES } from \"../stores/utils/bridgeMode\";\nimport { BridgeAddress } from \"./index\";\nimport { BridgeForm } from \"./index\";\nimport { BridgeNetwork } from \"./index\";\nimport { ModalContainer } from \"./ModalContainer\";\nimport { NetworkDetails } from \"./NetworkDetails\";\nimport { TransferAlert } from \"./TransferAlert\";\nimport { getFeeToApply, validFee } from \"../stores/utils/rewardable\";\nimport { inject, observer } from \"mobx-react\";\nimport { toDecimals } from \"../stores/utils/decimals\";\nexport var Bridge = (_dec = inject(\"RootStore\"), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Bridge, _React$Component);\n\n  function Bridge(props) {\n    var _this;\n\n    _classCallCheck(this, Bridge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Bridge).call(this, props));\n\n    _this.handleInputChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.isLessThan = function (amount, base) {\n      return new BN(amount).lt(new BN(base));\n    };\n\n    _this.isGreaterThan = function (amount, base) {\n      return new BN(amount).gt(new BN(base));\n    };\n\n    _this.onTransfer =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var amount, _this$props$RootStore, foreignStore, web3Store, homeStore, reverse, homeDisplayName, foreignDisplayName, fee, finalAmount, feeToApply, confirmationData;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                amount = _this.state.amount.trim();\n\n                if (amount) {\n                  _context.next = 5;\n                  break;\n                }\n\n                swal(\"Error\", \"Please specify amount\", \"error\");\n                return _context.abrupt(\"return\");\n\n              case 5:\n                _this$props$RootStore = _this.props.RootStore, foreignStore = _this$props$RootStore.foreignStore, web3Store = _this$props$RootStore.web3Store, homeStore = _this$props$RootStore.homeStore;\n\n                if (!(web3Store.metamaskNotSetted && web3Store.metamaskNet.name === \"\" || web3Store.defaultAccount.address === undefined)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                web3Store.showInstallMetamaskAlert();\n                return _context.abrupt(\"return\");\n\n              case 9:\n                reverse = _this.state.reverse;\n                homeDisplayName = homeStore.networkName;\n                foreignDisplayName = foreignStore.networkName;\n                fee = null;\n                finalAmount = new BN(amount);\n                feeToApply = getFeeToApply(homeStore.feeManager, foreignStore.feeManager, !reverse);\n\n                if (validFee(feeToApply)) {\n                  fee = feeToApply.multipliedBy(100);\n                  finalAmount = finalAmount.multipliedBy(1 - feeToApply);\n                }\n\n                confirmationData = {\n                  from: reverse ? foreignDisplayName : homeDisplayName,\n                  to: reverse ? homeDisplayName : foreignDisplayName,\n                  fromCurrency: reverse ? foreignStore.symbol : homeStore.symbol,\n                  toCurrency: reverse ? homeStore.symbol : foreignStore.symbol,\n                  fromAmount: amount,\n                  toAmount: finalAmount,\n                  fee: fee,\n                  reverse: reverse\n                };\n\n                _this.setState({\n                  showConfirmation: true,\n                  confirmationData: confirmationData\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onTransferConfirmation =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var alertStore, reverse, amount;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              alertStore = _this.props.RootStore.alertStore;\n              reverse = _this.state.reverse;\n\n              _this.setState({\n                showConfirmation: false,\n                confirmationData: {}\n              });\n\n              amount = _this.state.amount.trim();\n\n              if (amount) {\n                _context2.next = 7;\n                break;\n              }\n\n              swal(\"Error\", \"Please specify amount\", \"error\");\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.prev = 7;\n\n              if (!reverse) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.next = 11;\n              return _this._sendToForeign(amount);\n\n            case 11:\n              _context2.next = 15;\n              break;\n\n            case 13:\n              _context2.next = 15;\n              return _this._sendToHome(amount);\n\n            case 15:\n              _context2.next = 20;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](7);\n\n              if (!_context2.t0.message.includes(\"not mined within 50 blocks\") && !_context2.t0.message.includes(\"Failed to subscribe to new newBlockHeaders\")) {\n                alertStore.setLoading(false);\n              }\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[7, 17]]);\n    }));\n\n    _this.loadHomeDetails = function () {\n      var _this$props$RootStore2 = _this.props.RootStore,\n          web3Store = _this$props$RootStore2.web3Store,\n          homeStore = _this$props$RootStore2.homeStore,\n          bridgeMode = _this$props$RootStore2.bridgeMode;\n      var isErcToErcMode = bridgeMode === BRIDGE_MODES.ERC_TO_ERC;\n      var isExternalErc20 = bridgeMode === BRIDGE_MODES.ERC_TO_ERC || bridgeMode === BRIDGE_MODES.ERC_TO_NATIVE;\n      var modalData = {\n        isHome: true,\n        networkData: web3Store.homeNet,\n        url: web3Store.HOME_HTTP_PARITY_URL,\n        logo: homeLogoPurple,\n        address: homeStore.HOME_BRIDGE_ADDRESS,\n        currency: homeStore.symbol,\n        maxCurrentLimit: homeStore.maxCurrentDeposit,\n        maxPerTx: homeStore.maxPerTx,\n        minPerTx: homeStore.minPerTx,\n        totalBalance: homeStore.balance,\n        balance: homeStore.getDisplayedBalance(),\n        displayTokenAddress: isErcToErcMode,\n        tokenAddress: homeStore.tokenAddress,\n        tokenName: homeStore.tokenName,\n        displayBridgeLimits: true,\n        nativeSupplyTitle: !isExternalErc20,\n        getExplorerAddressUrl: function getExplorerAddressUrl(address) {\n          return homeStore.getExplorerAddressUrl(address);\n        }\n      };\n\n      _this.setState({\n        modalData: modalData,\n        showModal: true\n      });\n    };\n\n    _this.loadForeignDetails = function () {\n      var _this$props$RootStore3 = _this.props.RootStore,\n          web3Store = _this$props$RootStore3.web3Store,\n          foreignStore = _this$props$RootStore3.foreignStore;\n      var isExternalErc20 = foreignStore.tokenType === ERC_TYPES.ERC20;\n      var foreignURL = new URL(web3Store.FOREIGN_HTTP_PARITY_URL);\n      var foreignDisplayUrl = \"\".concat(foreignURL.protocol, \"//\").concat(foreignURL.hostname);\n      var modalData = {\n        isHome: false,\n        networkData: web3Store.foreignNet,\n        url: foreignDisplayUrl,\n        logo: foreignLogoPurple,\n        address: foreignStore.FOREIGN_BRIDGE_ADDRESS,\n        currency: foreignStore.symbol,\n        maxCurrentLimit: foreignStore.maxCurrentDeposit,\n        maxPerTx: foreignStore.maxPerTx,\n        minPerTx: foreignStore.minPerTx,\n        tokenAddress: foreignStore.tokenAddress,\n        tokenName: foreignStore.tokenName,\n        totalSupply: foreignStore.totalSupply,\n        balance: foreignStore.balance,\n        displayTokenAddress: true,\n        displayBridgeLimits: !isExternalErc20,\n        getExplorerAddressUrl: function getExplorerAddressUrl(address) {\n          return foreignStore.getExplorerAddressUrl(address);\n        }\n      };\n\n      _this.setState({\n        modalData: modalData,\n        showModal: true\n      });\n    };\n\n    _this.getNetworkTitle = function (networkName) {\n      var index = networkName.indexOf(\" \");\n\n      if (index === -1) {\n        return networkName;\n      }\n\n      return networkName.substring(0, index);\n    };\n\n    _this.getNetworkSubTitle = function (networkName) {\n      var index = networkName.indexOf(\" \");\n\n      if (index === -1) {\n        return false;\n      }\n\n      return networkName.substring(index + 1, networkName.length);\n    };\n\n    _this.state = {\n      reverse: false,\n      amount: \"\",\n      modalData: {},\n      confirmationData: {},\n      showModal: false,\n      showConfirmation: false\n    };\n    return _this;\n  }\n\n  _createClass(Bridge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var web3Store = this.props.RootStore.web3Store;\n      web3Store.getWeb3Promise.then(function () {\n        if (!web3Store.metamaskNet.id || !web3Store.foreignNet.id) {\n          _this2.forceUpdate();\n        } else {\n          var reverse = web3Store.metamaskNet.id.toString() === web3Store.foreignNet.id.toString();\n\n          if (reverse) {\n            _this2.setState({\n              reverse: reverse\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this3 = this;\n\n      var web3Store = this.props.RootStore.web3Store;\n      window.ethereum.on(\"networkChanged\", function (networkId) {\n        web3Store.getWeb3Promise.then(function () {\n          if (!networkId || !web3Store.foreignNet.id) {\n            _this3.forceUpdate();\n          } else {\n            var reverse = networkId.toString() === web3Store.foreignNet.id.toString();\n\n            if (reverse !== _this3.state.reverse) {\n              _this3.setState({\n                reverse: reverse\n              });\n            }\n          }\n        });\n        console.log(_this3.state);\n      });\n    }\n  }, {\n    key: \"_sendToHome\",\n    value: function () {\n      var _sendToHome2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(amount) {\n        var _this$props$RootStore4, web3Store, homeStore, alertStore, txStore, bridgeMode, isErcToErcMode, isLessThan, isGreaterThan, value;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$props$RootStore4 = this.props.RootStore, web3Store = _this$props$RootStore4.web3Store, homeStore = _this$props$RootStore4.homeStore, alertStore = _this$props$RootStore4.alertStore, txStore = _this$props$RootStore4.txStore, bridgeMode = _this$props$RootStore4.bridgeMode;\n                isErcToErcMode = bridgeMode === BRIDGE_MODES.ERC_TO_ERC;\n                isLessThan = this.isLessThan, isGreaterThan = this.isGreaterThan;\n\n                if (!(web3Store.metamaskNet.id.toString() !== web3Store.homeNet.id.toString())) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                swal(\"Error\", \"Please switch wallet to \".concat(web3Store.homeNet.name, \" network\"), \"error\");\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                if (!isLessThan(amount, homeStore.minPerTx)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                alertStore.pushError(\"The amount is less than current minimum per transaction amount.\\nThe minimum per transaction amount is: \".concat(homeStore.minPerTx, \" \").concat(homeStore.symbol));\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                if (!isGreaterThan(amount, homeStore.maxPerTx)) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                alertStore.pushError(\"The amount is above current maximum per transaction limit.\\nThe maximum per transaction limit is: \".concat(homeStore.maxPerTx, \" \").concat(homeStore.symbol));\n                return _context3.abrupt(\"return\");\n\n              case 12:\n                if (!isGreaterThan(amount, homeStore.maxCurrentDeposit)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                alertStore.pushError(\"The amount is above current daily limit.\\nThe max deposit today: \".concat(homeStore.maxCurrentDeposit, \" \").concat(homeStore.symbol));\n                return _context3.abrupt(\"return\");\n\n              case 15:\n                if (!isGreaterThan(amount, homeStore.getDisplayedBalance())) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                alertStore.pushError(\"Insufficient balance\");\n                _context3.next = 32;\n                break;\n\n              case 19:\n                _context3.prev = 19;\n                alertStore.setLoading(true);\n\n                if (!isErcToErcMode) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", txStore.erc677transferAndCall({\n                  to: homeStore.HOME_BRIDGE_ADDRESS,\n                  from: web3Store.defaultAccount.address,\n                  value: toDecimals(amount, homeStore.tokenDecimals),\n                  contract: homeStore.tokenContract,\n                  tokenAddress: homeStore.tokenAddress\n                }));\n\n              case 25:\n                value = toHex(toDecimals(amount, homeStore.tokenDecimals));\n                return _context3.abrupt(\"return\", txStore.doSend({\n                  to: homeStore.HOME_BRIDGE_ADDRESS,\n                  from: web3Store.defaultAccount.address,\n                  value: value,\n                  data: \"0x\",\n                  sentValue: value\n                }));\n\n              case 27:\n                _context3.next = 32;\n                break;\n\n              case 29:\n                _context3.prev = 29;\n                _context3.t0 = _context3[\"catch\"](19);\n                console.error(_context3.t0);\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[19, 29]]);\n      }));\n\n      function _sendToHome(_x2) {\n        return _sendToHome2.apply(this, arguments);\n      }\n\n      return _sendToHome;\n    }()\n  }, {\n    key: \"_sendToForeign\",\n    value: function () {\n      var _sendToForeign2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(amount) {\n        var _this$props$RootStore5, web3Store, foreignStore, alertStore, txStore, isExternalErc20, isLessThan, isGreaterThan;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$props$RootStore5 = this.props.RootStore, web3Store = _this$props$RootStore5.web3Store, foreignStore = _this$props$RootStore5.foreignStore, alertStore = _this$props$RootStore5.alertStore, txStore = _this$props$RootStore5.txStore;\n                isExternalErc20 = foreignStore.tokenType === ERC_TYPES.ERC20;\n                isLessThan = this.isLessThan, isGreaterThan = this.isGreaterThan;\n\n                if (!(web3Store.metamaskNet.id.toString() !== web3Store.foreignNet.id.toString())) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                swal(\"Error\", \"Please switch wallet to \".concat(web3Store.foreignNet.name, \" network\"), \"error\");\n                return _context4.abrupt(\"return\");\n\n              case 6:\n                if (!(!isExternalErc20 && isLessThan(amount, foreignStore.minPerTx))) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                alertStore.pushError(\"The amount is less than minimum amount per transaction.\\nThe min per transaction is: \".concat(foreignStore.minPerTx, \" \").concat(foreignStore.symbol));\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                if (!(!isExternalErc20 && isGreaterThan(amount, foreignStore.maxPerTx))) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                alertStore.pushError(\"The amount is above maximum amount per transaction.\\nThe max per transaction is: \".concat(foreignStore.maxPerTx, \" \").concat(foreignStore.symbol));\n                return _context4.abrupt(\"return\");\n\n              case 12:\n                if (!(!isExternalErc20 && isGreaterThan(amount, foreignStore.maxCurrentDeposit))) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                alertStore.pushError(\"The amount is above current daily limit.\\nThe max withdrawal today: \".concat(foreignStore.maxCurrentDeposit, \" \").concat(foreignStore.symbol));\n                return _context4.abrupt(\"return\");\n\n              case 15:\n                if (!isGreaterThan(amount, foreignStore.balance)) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                alertStore.pushError(\"Insufficient token balance. Your balance is \".concat(foreignStore.balance, \" \").concat(foreignStore.symbol));\n                _context4.next = 35;\n                break;\n\n              case 19:\n                _context4.prev = 19;\n                alertStore.setLoading(true);\n\n                if (!isExternalErc20) {\n                  _context4.next = 27;\n                  break;\n                }\n\n                _context4.next = 24;\n                return txStore.erc20transfer({\n                  to: foreignStore.FOREIGN_BRIDGE_ADDRESS,\n                  from: web3Store.defaultAccount.address,\n                  value: toDecimals(amount, foreignStore.tokenDecimals)\n                });\n\n              case 24:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 27:\n                _context4.next = 29;\n                return txStore.erc677transferAndCall({\n                  to: foreignStore.FOREIGN_BRIDGE_ADDRESS,\n                  from: web3Store.defaultAccount.address,\n                  value: toHex(toDecimals(amount, foreignStore.tokenDecimals)),\n                  contract: foreignStore.tokenContract,\n                  tokenAddress: foreignStore.tokenAddress\n                });\n\n              case 29:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 30:\n                _context4.next = 35;\n                break;\n\n              case 32:\n                _context4.prev = 32;\n                _context4.t0 = _context4[\"catch\"](19);\n                console.error(_context4.t0);\n\n              case 35:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[19, 32]]);\n      }));\n\n      function _sendToForeign(_x3) {\n        return _sendToForeign2.apply(this, arguments);\n      }\n\n      return _sendToForeign;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props$RootStore6 = this.props.RootStore,\n          web3Store = _this$props$RootStore6.web3Store,\n          foreignStore = _this$props$RootStore6.foreignStore,\n          homeStore = _this$props$RootStore6.homeStore;\n      var _this$state = this.state,\n          reverse = _this$state.reverse,\n          showModal = _this$state.showModal,\n          modalData = _this$state.modalData,\n          showConfirmation = _this$state.showConfirmation,\n          confirmationData = _this$state.confirmationData;\n      var formCurrency = reverse ? foreignStore.symbol : homeStore.symbol;\n\n      if (showModal && Object.keys(modalData).length !== 0) {\n        if (modalData.isHome && modalData.balance !== homeStore.getDisplayedBalance()) {\n          modalData.balance = homeStore.getDisplayedBalance();\n        } else if (!modalData.isHome && modalData.balance !== foreignStore.balance) {\n          modalData.balance = foreignStore.balance;\n        }\n      }\n\n      var homeNetworkName = this.getNetworkTitle(homeStore.networkName);\n      var homeNetworkSubtitle = this.getNetworkSubTitle(homeStore.networkName);\n      var foreignNetworkName = this.getNetworkTitle(foreignStore.networkName);\n      var foreignNetworkSubtitle = this.getNetworkSubTitle(foreignStore.networkName);\n      return React.createElement(\"div\", {\n        className: \"bridge-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bridge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(BridgeAddress, {\n        isHome: true,\n        reverse: reverse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bridge-transfer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-image-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"bridge-transfer-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bridge-transfer-content-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(BridgeNetwork, {\n        balance: reverse ? foreignStore.balance : homeStore.getDisplayedBalance(),\n        currency: reverse ? foreignStore.symbol : homeStore.symbol,\n        isHome: true,\n        networkSubtitle: reverse ? foreignNetworkSubtitle : homeNetworkSubtitle,\n        networkTitle: reverse ? foreignNetworkName : homeNetworkName,\n        showModal: reverse ? this.loadForeignDetails : this.loadHomeDetails,\n        side: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), React.createElement(BridgeForm, {\n        currency: formCurrency,\n        displayArrow: !web3Store.metamaskNotSetted,\n        onInputChange: this.handleInputChange(\"amount\"),\n        onTransfer: this.onTransfer,\n        reverse: reverse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(BridgeNetwork, {\n        balance: reverse ? homeStore.getDisplayedBalance() : foreignStore.balance,\n        currency: reverse ? homeStore.symbol : foreignStore.symbol,\n        isHome: false,\n        networkSubtitle: reverse ? homeNetworkSubtitle : foreignNetworkSubtitle,\n        networkTitle: reverse ? homeNetworkName : foreignNetworkName,\n        showModal: reverse ? this.loadHomeDetails : this.loadForeignDetails,\n        side: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"right-image-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }))), React.createElement(BridgeAddress, {\n        isHome: false,\n        reverse: reverse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), React.createElement(ModalContainer, {\n        hideModal: function hideModal() {\n          _this4.setState({\n            showModal: false\n          });\n        },\n        showModal: showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(NetworkDetails, Object.assign({}, modalData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }))), React.createElement(ModalContainer, {\n        showModal: showConfirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(TransferAlert, Object.assign({\n        onConfirmation: this.onTransferConfirmation,\n        onCancel: function onCancel() {\n          _this4.setState({\n            showConfirmation: false,\n            confirmationData: {}\n          });\n        }\n      }, confirmationData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Bridge;\n}(React.Component), _temp)) || _class) || _class);","map":{"version":3,"sources":["/home/usuario/Escritorio/csd-bridge-ui/src/components/Bridge.js"],"names":["BN","React","toHex","foreignLogoPurple","homeLogoPurple","swal","BRIDGE_MODES","ERC_TYPES","BridgeAddress","BridgeForm","BridgeNetwork","ModalContainer","NetworkDetails","TransferAlert","getFeeToApply","validFee","inject","observer","toDecimals","Bridge","props","handleInputChange","name","event","setState","target","value","isLessThan","amount","base","lt","isGreaterThan","gt","onTransfer","e","preventDefault","state","trim","RootStore","foreignStore","web3Store","homeStore","metamaskNotSetted","metamaskNet","defaultAccount","address","undefined","showInstallMetamaskAlert","reverse","homeDisplayName","networkName","foreignDisplayName","fee","finalAmount","feeToApply","feeManager","multipliedBy","confirmationData","from","to","fromCurrency","symbol","toCurrency","fromAmount","toAmount","showConfirmation","onTransferConfirmation","alertStore","_sendToForeign","_sendToHome","message","includes","setLoading","loadHomeDetails","bridgeMode","isErcToErcMode","ERC_TO_ERC","isExternalErc20","ERC_TO_NATIVE","modalData","isHome","networkData","homeNet","url","HOME_HTTP_PARITY_URL","logo","HOME_BRIDGE_ADDRESS","currency","maxCurrentLimit","maxCurrentDeposit","maxPerTx","minPerTx","totalBalance","balance","getDisplayedBalance","displayTokenAddress","tokenAddress","tokenName","displayBridgeLimits","nativeSupplyTitle","getExplorerAddressUrl","showModal","loadForeignDetails","tokenType","ERC20","foreignURL","URL","FOREIGN_HTTP_PARITY_URL","foreignDisplayUrl","protocol","hostname","foreignNet","FOREIGN_BRIDGE_ADDRESS","totalSupply","getNetworkTitle","index","indexOf","substring","getNetworkSubTitle","length","getWeb3Promise","then","id","forceUpdate","toString","window","ethereum","on","networkId","console","log","txStore","pushError","erc677transferAndCall","tokenDecimals","contract","tokenContract","doSend","data","sentValue","error","erc20transfer","formCurrency","Object","keys","homeNetworkName","homeNetworkSubtitle","foreignNetworkName","foreignNetworkSubtitle","Component"],"mappings":"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","sourcesContent":["import BN from \"bignumber.js\";\nimport React from \"react\";\nimport { toHex } from \"web3-utils\";\nimport foreignLogoPurple from \"../assets/images/logos/logo-poa-20-purple@2x.png\";\nimport homeLogoPurple from \"../assets/images/logos/logo-poa-sokol-purple@2x.png\";\nimport swal from \"sweetalert\";\nimport { BRIDGE_MODES, ERC_TYPES } from \"../stores/utils/bridgeMode\";\nimport { BridgeAddress } from \"./index\";\nimport { BridgeForm } from \"./index\";\nimport { BridgeNetwork } from \"./index\";\nimport { ModalContainer } from \"./ModalContainer\";\nimport { NetworkDetails } from \"./NetworkDetails\";\nimport { TransferAlert } from \"./TransferAlert\";\nimport { getFeeToApply, validFee } from \"../stores/utils/rewardable\";\nimport { inject, observer } from \"mobx-react\";\nimport { toDecimals } from \"../stores/utils/decimals\";\n\n@inject(\"RootStore\")\n@observer\nexport class Bridge extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reverse: false,\n      amount: \"\",\n      modalData: {},\n      confirmationData: {},\n      showModal: false,\n      showConfirmation: false,\n    };\n  }\n  handleInputChange = (name) => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  componentDidMount() {\n    const { web3Store } = this.props.RootStore;\n    web3Store.getWeb3Promise.then(() => {\n      if (!web3Store.metamaskNet.id || !web3Store.foreignNet.id) {\n        this.forceUpdate();\n      } else {\n        const reverse =\n          web3Store.metamaskNet.id.toString() ===\n          web3Store.foreignNet.id.toString();\n        if (reverse) {\n          this.setState({\n            reverse,\n          });\n        }\n      }\n    });\n  }\n  componentDidUpdate() {\n    const { web3Store } = this.props.RootStore;\n    window.ethereum.on(\"networkChanged\", (networkId) => {\n      web3Store.getWeb3Promise.then(() => {\n        if (!networkId || !web3Store.foreignNet.id) {\n          this.forceUpdate();\n        } else {\n          const reverse =\n            networkId.toString() === web3Store.foreignNet.id.toString();\n          if (reverse !== this.state.reverse) {\n            this.setState({ reverse });\n          }\n        }\n      });\n      console.log(this.state);\n    });\n  }\n\n  async _sendToHome(amount) {\n    const { web3Store, homeStore, alertStore, txStore, bridgeMode } =\n      this.props.RootStore;\n    const isErcToErcMode = bridgeMode === BRIDGE_MODES.ERC_TO_ERC;\n    const { isLessThan, isGreaterThan } = this;\n    if (\n      web3Store.metamaskNet.id.toString() !== web3Store.homeNet.id.toString()\n    ) {\n      swal(\n        \"Error\",\n        `Please switch wallet to ${web3Store.homeNet.name} network`,\n        \"error\"\n      );\n      return;\n    }\n    if (isLessThan(amount, homeStore.minPerTx)) {\n      alertStore.pushError(\n        `The amount is less than current minimum per transaction amount.\\nThe minimum per transaction amount is: ${homeStore.minPerTx} ${homeStore.symbol}`\n      );\n      return;\n    }\n    if (isGreaterThan(amount, homeStore.maxPerTx)) {\n      alertStore.pushError(\n        `The amount is above current maximum per transaction limit.\\nThe maximum per transaction limit is: ${homeStore.maxPerTx} ${homeStore.symbol}`\n      );\n      return;\n    }\n    if (isGreaterThan(amount, homeStore.maxCurrentDeposit)) {\n      alertStore.pushError(\n        `The amount is above current daily limit.\\nThe max deposit today: ${homeStore.maxCurrentDeposit} ${homeStore.symbol}`\n      );\n      return;\n    }\n    if (isGreaterThan(amount, homeStore.getDisplayedBalance())) {\n      alertStore.pushError(\"Insufficient balance\");\n    } else {\n      try {\n        alertStore.setLoading(true);\n        if (isErcToErcMode) {\n          return txStore.erc677transferAndCall({\n            to: homeStore.HOME_BRIDGE_ADDRESS,\n            from: web3Store.defaultAccount.address,\n            value: toDecimals(amount, homeStore.tokenDecimals),\n            contract: homeStore.tokenContract,\n            tokenAddress: homeStore.tokenAddress,\n          });\n        } else {\n          const value = toHex(toDecimals(amount, homeStore.tokenDecimals));\n          return txStore.doSend({\n            to: homeStore.HOME_BRIDGE_ADDRESS,\n            from: web3Store.defaultAccount.address,\n            value,\n            data: \"0x\",\n            sentValue: value,\n          });\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n\n  async _sendToForeign(amount) {\n    const { web3Store, foreignStore, alertStore, txStore } =\n      this.props.RootStore;\n    const isExternalErc20 = foreignStore.tokenType === ERC_TYPES.ERC20;\n    const { isLessThan, isGreaterThan } = this;\n    if (\n      web3Store.metamaskNet.id.toString() !== web3Store.foreignNet.id.toString()\n    ) {\n      swal(\n        \"Error\",\n        `Please switch wallet to ${web3Store.foreignNet.name} network`,\n        \"error\"\n      );\n      return;\n    }\n    if (!isExternalErc20 && isLessThan(amount, foreignStore.minPerTx)) {\n      alertStore.pushError(\n        `The amount is less than minimum amount per transaction.\\nThe min per transaction is: ${foreignStore.minPerTx} ${foreignStore.symbol}`\n      );\n      return;\n    }\n    if (!isExternalErc20 && isGreaterThan(amount, foreignStore.maxPerTx)) {\n      alertStore.pushError(\n        `The amount is above maximum amount per transaction.\\nThe max per transaction is: ${foreignStore.maxPerTx} ${foreignStore.symbol}`\n      );\n      return;\n    }\n    if (\n      !isExternalErc20 &&\n      isGreaterThan(amount, foreignStore.maxCurrentDeposit)\n    ) {\n      alertStore.pushError(\n        `The amount is above current daily limit.\\nThe max withdrawal today: ${foreignStore.maxCurrentDeposit} ${foreignStore.symbol}`\n      );\n      return;\n    }\n    if (isGreaterThan(amount, foreignStore.balance)) {\n      alertStore.pushError(\n        `Insufficient token balance. Your balance is ${foreignStore.balance} ${foreignStore.symbol}`\n      );\n    } else {\n      try {\n        alertStore.setLoading(true);\n        if (isExternalErc20) {\n          return await txStore.erc20transfer({\n            to: foreignStore.FOREIGN_BRIDGE_ADDRESS,\n            from: web3Store.defaultAccount.address,\n            value: toDecimals(amount, foreignStore.tokenDecimals),\n          });\n        } else {\n          return await txStore.erc677transferAndCall({\n            to: foreignStore.FOREIGN_BRIDGE_ADDRESS,\n            from: web3Store.defaultAccount.address,\n            value: toHex(toDecimals(amount, foreignStore.tokenDecimals)),\n            contract: foreignStore.tokenContract,\n            tokenAddress: foreignStore.tokenAddress,\n          });\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n\n  isLessThan = (amount, base) => new BN(amount).lt(new BN(base));\n\n  isGreaterThan = (amount, base) => new BN(amount).gt(new BN(base));\n\n  onTransfer = async (e) => {\n    e.preventDefault();\n\n    const amount = this.state.amount.trim();\n    if (!amount) {\n      swal(\"Error\", \"Please specify amount\", \"error\");\n      return;\n    }\n\n    const { foreignStore, web3Store, homeStore } = this.props.RootStore;\n\n    if (\n      (web3Store.metamaskNotSetted && web3Store.metamaskNet.name === \"\") ||\n      web3Store.defaultAccount.address === undefined\n    ) {\n      web3Store.showInstallMetamaskAlert();\n      return;\n    }\n\n    const { reverse } = this.state;\n    const homeDisplayName = homeStore.networkName;\n    const foreignDisplayName = foreignStore.networkName;\n\n    let fee = null;\n    let finalAmount = new BN(amount);\n    const feeToApply = getFeeToApply(\n      homeStore.feeManager,\n      foreignStore.feeManager,\n      !reverse\n    );\n\n    if (validFee(feeToApply)) {\n      fee = feeToApply.multipliedBy(100);\n      finalAmount = finalAmount.multipliedBy(1 - feeToApply);\n    }\n\n    const confirmationData = {\n      from: reverse ? foreignDisplayName : homeDisplayName,\n      to: reverse ? homeDisplayName : foreignDisplayName,\n      fromCurrency: reverse ? foreignStore.symbol : homeStore.symbol,\n      toCurrency: reverse ? homeStore.symbol : foreignStore.symbol,\n      fromAmount: amount,\n      toAmount: finalAmount,\n      fee,\n      reverse,\n    };\n\n    this.setState({ showConfirmation: true, confirmationData });\n  };\n\n  onTransferConfirmation = async () => {\n    const { alertStore } = this.props.RootStore;\n    const { reverse } = this.state;\n\n    this.setState({ showConfirmation: false, confirmationData: {} });\n    const amount = this.state.amount.trim();\n    if (!amount) {\n      swal(\"Error\", \"Please specify amount\", \"error\");\n      return;\n    }\n\n    try {\n      if (reverse) {\n        await this._sendToForeign(amount);\n      } else {\n        await this._sendToHome(amount);\n      }\n    } catch (e) {\n      if (\n        !e.message.includes(\"not mined within 50 blocks\") &&\n        !e.message.includes(\"Failed to subscribe to new newBlockHeaders\")\n      ) {\n        alertStore.setLoading(false);\n      }\n    }\n  };\n\n  loadHomeDetails = () => {\n    const { web3Store, homeStore, bridgeMode } = this.props.RootStore;\n    const isErcToErcMode = bridgeMode === BRIDGE_MODES.ERC_TO_ERC;\n    const isExternalErc20 =\n      bridgeMode === BRIDGE_MODES.ERC_TO_ERC ||\n      bridgeMode === BRIDGE_MODES.ERC_TO_NATIVE;\n\n    const modalData = {\n      isHome: true,\n      networkData: web3Store.homeNet,\n      url: web3Store.HOME_HTTP_PARITY_URL,\n      logo: homeLogoPurple,\n      address: homeStore.HOME_BRIDGE_ADDRESS,\n      currency: homeStore.symbol,\n      maxCurrentLimit: homeStore.maxCurrentDeposit,\n      maxPerTx: homeStore.maxPerTx,\n      minPerTx: homeStore.minPerTx,\n      totalBalance: homeStore.balance,\n      balance: homeStore.getDisplayedBalance(),\n      displayTokenAddress: isErcToErcMode,\n      tokenAddress: homeStore.tokenAddress,\n      tokenName: homeStore.tokenName,\n      displayBridgeLimits: true,\n      nativeSupplyTitle: !isExternalErc20,\n      getExplorerAddressUrl: (address) =>\n        homeStore.getExplorerAddressUrl(address),\n    };\n\n    this.setState({ modalData, showModal: true });\n  };\n\n  loadForeignDetails = () => {\n    const { web3Store, foreignStore } = this.props.RootStore;\n    const isExternalErc20 = foreignStore.tokenType === ERC_TYPES.ERC20;\n    const foreignURL = new URL(web3Store.FOREIGN_HTTP_PARITY_URL);\n    const foreignDisplayUrl = `${foreignURL.protocol}//${foreignURL.hostname}`;\n\n    const modalData = {\n      isHome: false,\n      networkData: web3Store.foreignNet,\n      url: foreignDisplayUrl,\n      logo: foreignLogoPurple,\n      address: foreignStore.FOREIGN_BRIDGE_ADDRESS,\n      currency: foreignStore.symbol,\n      maxCurrentLimit: foreignStore.maxCurrentDeposit,\n      maxPerTx: foreignStore.maxPerTx,\n      minPerTx: foreignStore.minPerTx,\n      tokenAddress: foreignStore.tokenAddress,\n      tokenName: foreignStore.tokenName,\n      totalSupply: foreignStore.totalSupply,\n      balance: foreignStore.balance,\n      displayTokenAddress: true,\n      displayBridgeLimits: !isExternalErc20,\n      getExplorerAddressUrl: (address) =>\n        foreignStore.getExplorerAddressUrl(address),\n    };\n\n    this.setState({ modalData, showModal: true });\n  };\n\n  getNetworkTitle = (networkName) => {\n    const index = networkName.indexOf(\" \");\n\n    if (index === -1) {\n      return networkName;\n    }\n\n    return networkName.substring(0, index);\n  };\n\n  getNetworkSubTitle = (networkName) => {\n    const index = networkName.indexOf(\" \");\n\n    if (index === -1) {\n      return false;\n    }\n\n    return networkName.substring(index + 1, networkName.length);\n  };\n\n  render() {\n    const { web3Store, foreignStore, homeStore } = this.props.RootStore;\n    const {\n      reverse,\n      showModal,\n      modalData,\n      showConfirmation,\n      confirmationData,\n    } = this.state;\n    const formCurrency = reverse ? foreignStore.symbol : homeStore.symbol;\n\n    if (showModal && Object.keys(modalData).length !== 0) {\n      if (\n        modalData.isHome &&\n        modalData.balance !== homeStore.getDisplayedBalance()\n      ) {\n        modalData.balance = homeStore.getDisplayedBalance();\n      } else if (\n        !modalData.isHome &&\n        modalData.balance !== foreignStore.balance\n      ) {\n        modalData.balance = foreignStore.balance;\n      }\n    }\n\n    const homeNetworkName = this.getNetworkTitle(homeStore.networkName);\n    const homeNetworkSubtitle = this.getNetworkSubTitle(homeStore.networkName);\n    const foreignNetworkName = this.getNetworkTitle(foreignStore.networkName);\n    const foreignNetworkSubtitle = this.getNetworkSubTitle(\n      foreignStore.networkName\n    );\n\n    return (\n      <div className=\"bridge-container\">\n        <div className=\"bridge\">\n          <BridgeAddress isHome={true} reverse={reverse} />\n          <div className=\"bridge-transfer\">\n            <div className=\"left-image-wrapper\">\n              <div className=\"left-image\" />\n            </div>\n            <div className=\"bridge-transfer-content\">\n              <div className=\"bridge-transfer-content-background\">\n                <BridgeNetwork\n                  balance={\n                    reverse\n                      ? foreignStore.balance\n                      : homeStore.getDisplayedBalance()\n                  }\n                  currency={reverse ? foreignStore.symbol : homeStore.symbol}\n                  isHome={true}\n                  networkSubtitle={\n                    reverse ? foreignNetworkSubtitle : homeNetworkSubtitle\n                  }\n                  networkTitle={reverse ? foreignNetworkName : homeNetworkName}\n                  showModal={\n                    reverse ? this.loadForeignDetails : this.loadHomeDetails\n                  }\n                  side=\"left\"\n                />\n                <BridgeForm\n                  currency={formCurrency}\n                  displayArrow={!web3Store.metamaskNotSetted}\n                  onInputChange={this.handleInputChange(\"amount\")}\n                  onTransfer={this.onTransfer}\n                  reverse={reverse}\n                />\n                <BridgeNetwork\n                  balance={\n                    reverse\n                      ? homeStore.getDisplayedBalance()\n                      : foreignStore.balance\n                  }\n                  currency={reverse ? homeStore.symbol : foreignStore.symbol}\n                  isHome={false}\n                  networkSubtitle={\n                    reverse ? homeNetworkSubtitle : foreignNetworkSubtitle\n                  }\n                  networkTitle={reverse ? homeNetworkName : foreignNetworkName}\n                  showModal={\n                    reverse ? this.loadHomeDetails : this.loadForeignDetails\n                  }\n                  side=\"right\"\n                />\n              </div>\n            </div>\n            <div className=\"right-image-wrapper\">\n              <div className=\"right-image\" />\n            </div>\n          </div>\n          <BridgeAddress isHome={false} reverse={reverse} />\n          <ModalContainer\n            hideModal={() => {\n              this.setState({ showModal: false });\n            }}\n            showModal={showModal}\n          >\n            <NetworkDetails {...modalData} />\n          </ModalContainer>\n          <ModalContainer showModal={showConfirmation}>\n            <TransferAlert\n              onConfirmation={this.onTransferConfirmation}\n              onCancel={() => {\n                this.setState({\n                  showConfirmation: false,\n                  confirmationData: {},\n                });\n              }}\n              {...confirmationData}\n            />\n          </ModalContainer>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}