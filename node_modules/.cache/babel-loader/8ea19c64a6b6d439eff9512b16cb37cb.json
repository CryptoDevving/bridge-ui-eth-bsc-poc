{"ast":null,"code":"import _regeneratorRuntime from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport BN from 'bignumber.js';\nimport { fromDecimals } from './decimals';\nimport { fromWei } from 'web3-utils';\nimport { abi as rewardableValidatorsAbi } from '../../contracts/RewardableValidators';\nimport { ERC_TYPES } from \"./bridgeMode\";\nexport var ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport var getMaxPerTxLimit =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(contract, decimals) {\n    var maxPerTx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return contract.methods.maxPerTx().call();\n\n          case 2:\n            maxPerTx = _context.sent;\n            return _context.abrupt(\"return\", fromDecimals(maxPerTx, decimals));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getMaxPerTxLimit(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getMinPerTxLimit =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(contract, decimals) {\n    var minPerTx;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return contract.methods.minPerTx().call();\n\n          case 2:\n            minPerTx = _context2.sent;\n            return _context2.abrupt(\"return\", fromDecimals(minPerTx, decimals));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getMinPerTxLimit(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getCurrentLimit =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(contract, decimals) {\n    var currentDay, dailyLimit, totalSpentPerDay, maxCurrentDeposit;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return contract.methods.getCurrentDay().call();\n\n          case 2:\n            currentDay = _context3.sent;\n            _context3.next = 5;\n            return contract.methods.dailyLimit().call();\n\n          case 5:\n            dailyLimit = _context3.sent;\n            _context3.next = 8;\n            return contract.methods.totalSpentPerDay(currentDay).call();\n\n          case 8:\n            totalSpentPerDay = _context3.sent;\n            maxCurrentDeposit = new BN(dailyLimit).minus(new BN(totalSpentPerDay)).toString(10);\n            return _context3.abrupt(\"return\", {\n              maxCurrentDeposit: fromDecimals(maxCurrentDeposit, decimals),\n              dailyLimit: fromDecimals(dailyLimit, decimals),\n              totalSpentPerDay: fromDecimals(totalSpentPerDay, decimals)\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getCurrentLimit(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getPastEvents = function getPastEvents(contract, fromBlock, toBlock) {\n  var event = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'allEvents';\n  return contract.getPastEvents(event, {\n    fromBlock: fromBlock,\n    toBlock: toBlock\n  });\n};\nexport var getErc677TokenAddress = function getErc677TokenAddress(contract) {\n  return contract.methods.erc677token().call();\n};\nexport var getErc20TokenAddress = function getErc20TokenAddress(contract) {\n  return contract.methods.erc20token().call();\n};\nexport var getSymbol = function getSymbol(contract) {\n  return contract.methods.symbol().call();\n};\nexport var getDecimals = function getDecimals(contract) {\n  return contract.methods.decimals().call();\n};\nexport var getMessage = function getMessage(contract, messageHash) {\n  return contract.methods.message(messageHash).call();\n};\nexport var getTotalSupply =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(contract) {\n    var totalSupply, decimals;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return contract.methods.totalSupply().call();\n\n          case 2:\n            totalSupply = _context4.sent;\n            _context4.next = 5;\n            return contract.methods.decimals().call();\n\n          case 5:\n            decimals = _context4.sent;\n            return _context4.abrupt(\"return\", fromDecimals(totalSupply, decimals));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getTotalSupply(_x7) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getBalanceOf =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(contract, address) {\n    var balance, decimals;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return contract.methods.balanceOf(address).call();\n\n          case 2:\n            balance = _context5.sent;\n            _context5.next = 5;\n            return contract.methods.decimals().call();\n\n          case 5:\n            decimals = _context5.sent;\n            return _context5.abrupt(\"return\", fromDecimals(balance, decimals));\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getBalanceOf(_x8, _x9) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var mintedTotally =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(contract) {\n    var mintedCoins;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return contract.methods.mintedTotally().call();\n\n          case 2:\n            mintedCoins = _context6.sent;\n            return _context6.abrupt(\"return\", new BN(mintedCoins));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function mintedTotally(_x10) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var totalBurntCoins =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(contract) {\n    var burntCoins;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return contract.methods.totalBurntCoins().call();\n\n          case 2:\n            burntCoins = _context7.sent;\n            return _context7.abrupt(\"return\", new BN(burntCoins));\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function totalBurntCoins(_x11) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var getValidatorList =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(address, eth) {\n    var validatorsContract, validators, deployedAtBlock, contract, validatorsEvents;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            validatorsContract = new eth.Contract(rewardableValidatorsAbi, address);\n            _context8.next = 3;\n            return validatorList(validatorsContract);\n\n          case 3:\n            validators = _context8.sent;\n\n            if (!validators.length) {\n              _context8.next = 6;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", validators);\n\n          case 6:\n            _context8.next = 8;\n            return getDeployedAtBlock(validatorsContract);\n\n          case 8:\n            deployedAtBlock = _context8.sent;\n            contract = new eth.Contract([], address);\n            _context8.next = 12;\n            return contract.getPastEvents('allEvents', {\n              fromBlock: Number(deployedAtBlock)\n            });\n\n          case 12:\n            validatorsEvents = _context8.sent;\n            return _context8.abrupt(\"return\", processValidatorsEvents(validatorsEvents));\n\n          case 14:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function getValidatorList(_x12, _x13) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var validatorList =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(contract) {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return contract.methods.validatorList().call();\n\n          case 3:\n            return _context9.abrupt(\"return\", _context9.sent);\n\n          case 6:\n            _context9.prev = 6;\n            _context9.t0 = _context9[\"catch\"](0);\n            return _context9.abrupt(\"return\", []);\n\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 6]]);\n  }));\n\n  return function validatorList(_x14) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var processValidatorsEvents = function processValidatorsEvents(events) {\n  var validatorList = new Set();\n  events.forEach(function (event) {\n    parseValidatorEvent(event);\n\n    if (event.event === 'ValidatorAdded') {\n      validatorList.add(event.returnValues.validator);\n    } else if (event.event === 'ValidatorRemoved') {\n      validatorList.delete(event.returnValues.validator);\n    }\n  });\n  return Array.from(validatorList);\n};\nexport var parseValidatorEvent = function parseValidatorEvent(event) {\n  if (event.event === undefined && event.raw && event.raw.topics && (event.raw.topics[0] === '0xe366c1c0452ed8eec96861e9e54141ebff23c9ec89fe27b996b45f5ec3884987' || event.raw.topics[0] === '0x8064a302796c89446a96d63470b5b036212da26bd2debe5bec73e0170a9a5e83')) {\n    var rawAddress = event.raw.topics.length > 1 ? event.raw.topics[1] : event.raw.data;\n    var address = '0x' + rawAddress.slice(26);\n    event.event = 'ValidatorAdded';\n    event.returnValues.validator = address;\n  } else if (event.event === undefined && event.raw && event.raw.topics && event.raw.topics[0] === \"0xe1434e25d6611e0db941968fdc97811c982ac1602e951637d206f5fdda9dd8f1\") {\n    var _rawAddress = event.raw.data === '0x' ? event.raw.topics[1] : event.raw.data;\n\n    var _address = '0x' + _rawAddress.slice(26);\n\n    event.event = 'ValidatorRemoved';\n    event.returnValues.validator = _address;\n  }\n};\nexport var getName = function getName(contract) {\n  return contract.methods.name().call();\n};\nexport var getFeeManager =\n/*#__PURE__*/\nfunction () {\n  var _ref10 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10(contract) {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return contract.methods.feeManagerContract().call();\n\n          case 3:\n            return _context10.abrupt(\"return\", _context10.sent);\n\n          case 6:\n            _context10.prev = 6;\n            _context10.t0 = _context10[\"catch\"](0);\n            return _context10.abrupt(\"return\", ZERO_ADDRESS);\n\n          case 9:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 6]]);\n  }));\n\n  return function getFeeManager(_x15) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var getFeeManagerMode = function getFeeManagerMode(contract) {\n  return contract.methods.getFeeManagerMode().call();\n};\nexport var getHomeFee =\n/*#__PURE__*/\nfunction () {\n  var _ref11 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee11(contract) {\n    var feeInWei;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return contract.methods.getHomeFee().call();\n\n          case 2:\n            feeInWei = _context11.sent;\n            return _context11.abrupt(\"return\", new BN(fromWei(feeInWei.toString())));\n\n          case 4:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function getHomeFee(_x16) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport var getForeignFee =\n/*#__PURE__*/\nfunction () {\n  var _ref12 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee12(contract) {\n    var feeInWei;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return contract.methods.getForeignFee().call();\n\n          case 2:\n            feeInWei = _context12.sent;\n            return _context12.abrupt(\"return\", new BN(fromWei(feeInWei.toString())));\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function getForeignFee(_x17) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nexport var getDeployedAtBlock =\n/*#__PURE__*/\nfunction () {\n  var _ref13 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee13(contract) {\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return contract.methods.deployedAtBlock().call();\n\n          case 3:\n            return _context13.abrupt(\"return\", _context13.sent);\n\n          case 6:\n            _context13.prev = 6;\n            _context13.t0 = _context13[\"catch\"](0);\n            return _context13.abrupt(\"return\", 0);\n\n          case 9:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 6]]);\n  }));\n\n  return function getDeployedAtBlock(_x18) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nexport var getTokenType =\n/*#__PURE__*/\nfunction () {\n  var _ref14 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee14(contract, bridgeAddress) {\n    var bridgeContract;\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return contract.methods.bridgeContract().call();\n\n          case 3:\n            bridgeContract = _context14.sent;\n\n            if (!(bridgeContract === bridgeAddress)) {\n              _context14.next = 8;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", ERC_TYPES.ERC677);\n\n          case 8:\n            return _context14.abrupt(\"return\", ERC_TYPES.ERC20);\n\n          case 9:\n            _context14.next = 14;\n            break;\n\n          case 11:\n            _context14.prev = 11;\n            _context14.t0 = _context14[\"catch\"](0);\n            return _context14.abrupt(\"return\", ERC_TYPES.ERC20);\n\n          case 14:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 11]]);\n  }));\n\n  return function getTokenType(_x19, _x20) {\n    return _ref14.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/usuario/Escritorio/csd-bridge-ui/src/stores/utils/contract.js"],"names":["BN","fromDecimals","fromWei","abi","rewardableValidatorsAbi","ERC_TYPES","ZERO_ADDRESS","getMaxPerTxLimit","contract","decimals","methods","maxPerTx","call","getMinPerTxLimit","minPerTx","getCurrentLimit","getCurrentDay","currentDay","dailyLimit","totalSpentPerDay","maxCurrentDeposit","minus","toString","getPastEvents","fromBlock","toBlock","event","getErc677TokenAddress","erc677token","getErc20TokenAddress","erc20token","getSymbol","symbol","getDecimals","getMessage","messageHash","message","getTotalSupply","totalSupply","getBalanceOf","address","balanceOf","balance","mintedTotally","mintedCoins","totalBurntCoins","burntCoins","getValidatorList","eth","validatorsContract","Contract","validatorList","validators","length","getDeployedAtBlock","deployedAtBlock","Number","validatorsEvents","processValidatorsEvents","events","Set","forEach","parseValidatorEvent","add","returnValues","validator","delete","Array","from","undefined","raw","topics","rawAddress","data","slice","getName","name","getFeeManager","feeManagerContract","getFeeManagerMode","getHomeFee","feeInWei","getForeignFee","getTokenType","bridgeAddress","bridgeContract","ERC677","ERC20"],"mappings":"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","sourcesContent":["import BN from 'bignumber.js'\nimport { fromDecimals } from './decimals'\nimport { fromWei } from 'web3-utils'\nimport { abi as rewardableValidatorsAbi } from '../../contracts/RewardableValidators'\nimport { ERC_TYPES } from \"./bridgeMode\"\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const getMaxPerTxLimit = async (contract,decimals) => {\n  const maxPerTx = await contract.methods.maxPerTx().call()\n  return fromDecimals(maxPerTx,decimals)\n}\n\nexport const getMinPerTxLimit = async (contract,decimals) => {\n  const minPerTx = await contract.methods.minPerTx().call()\n  return fromDecimals(minPerTx,decimals)\n}\n\nexport const getCurrentLimit = async (contract,decimals) => {\n  const currentDay = await contract.methods.getCurrentDay().call()\n  const dailyLimit = await contract.methods.dailyLimit().call()\n  const totalSpentPerDay = await contract.methods.totalSpentPerDay(currentDay).call()\n  const maxCurrentDeposit = new BN(dailyLimit).minus(new BN(totalSpentPerDay)).toString(10)\n  return {\n    maxCurrentDeposit: fromDecimals(maxCurrentDeposit,decimals),\n    dailyLimit: fromDecimals(dailyLimit,decimals),\n    totalSpentPerDay: fromDecimals(totalSpentPerDay,decimals)\n  }\n}\n\nexport const getPastEvents = (contract, fromBlock, toBlock, event = 'allEvents') => contract.getPastEvents(event, { fromBlock, toBlock })\n\nexport const getErc677TokenAddress = (contract) => contract.methods.erc677token().call()\n\nexport const getErc20TokenAddress = (contract) => contract.methods.erc20token().call()\n\nexport const getSymbol = (contract) => contract.methods.symbol().call()\n\nexport const getDecimals= (contract) => contract.methods.decimals().call()\n\nexport const getMessage = (contract, messageHash) => contract.methods.message(messageHash).call()\n\nexport const getTotalSupply = async (contract) => {\n  const totalSupply = await contract.methods.totalSupply().call()\n  const decimals = await contract.methods.decimals().call()\n  return fromDecimals(totalSupply,decimals)\n}\n\nexport const getBalanceOf = async (contract, address) => {\n  const balance = await contract.methods.balanceOf(address).call()\n  const decimals = await contract.methods.decimals().call()\n  return fromDecimals(balance,decimals)\n}\n\nexport const mintedTotally = async (contract) => {\n  const mintedCoins = await contract.methods.mintedTotally().call()\n  return new BN(mintedCoins)\n}\n\nexport const totalBurntCoins = async (contract) => {\n  const burntCoins = await contract.methods.totalBurntCoins().call()\n  return new BN(burntCoins)\n}\n\nexport const getValidatorList = async (address, eth) => {\n  const validatorsContract = new eth.Contract(rewardableValidatorsAbi, address)\n  const validators = await validatorList(validatorsContract)\n\n  if(validators.length) {\n    return validators\n  }\n\n  const deployedAtBlock = await getDeployedAtBlock(validatorsContract)\n  const contract = new eth.Contract([], address)\n  const validatorsEvents = await contract.getPastEvents('allEvents', { fromBlock: Number(deployedAtBlock) })\n\n  return processValidatorsEvents(validatorsEvents)\n}\n\nexport const validatorList = async (contract) => {\n  try {\n    return await contract.methods.validatorList().call()\n  } catch (e) {\n    return []\n  }\n}\n\nexport const processValidatorsEvents = (events) => {\n  const validatorList = new Set()\n  events.forEach(event => {\n    parseValidatorEvent(event)\n\n    if(event.event === 'ValidatorAdded') {\n      validatorList.add(event.returnValues.validator)\n    } else if(event.event === 'ValidatorRemoved') {\n      validatorList.delete(event.returnValues.validator)\n    }\n    })\n\n  return Array.from(validatorList)\n}\n\nexport const parseValidatorEvent = (event) => {\n  if (event.event === undefined\n    && event.raw\n    && event.raw.topics\n    && (event.raw.topics[0] === '0xe366c1c0452ed8eec96861e9e54141ebff23c9ec89fe27b996b45f5ec3884987'\n      || event.raw.topics[0] === '0x8064a302796c89446a96d63470b5b036212da26bd2debe5bec73e0170a9a5e83')) {\n    const rawAddress = event.raw.topics.length > 1 ? event.raw.topics[1] : event.raw.data\n    const address = '0x' + rawAddress.slice(26)\n    event.event = 'ValidatorAdded'\n    event.returnValues.validator = address\n  } else if (event.event === undefined\n    && event.raw\n    && event.raw.topics\n    && event.raw.topics[0] === \"0xe1434e25d6611e0db941968fdc97811c982ac1602e951637d206f5fdda9dd8f1\") {\n    const rawAddress = event.raw.data === '0x' ? event.raw.topics[1] : event.raw.data\n    const address = '0x' + rawAddress.slice(26)\n    event.event = 'ValidatorRemoved'\n    event.returnValues.validator = address\n  }\n}\n\nexport const getName = (contract) => contract.methods.name().call()\n\nexport const getFeeManager = async (contract) => {\n try {\n   return await contract.methods.feeManagerContract().call()\n } catch (e) {\n   return ZERO_ADDRESS\n }\n}\n\nexport const getFeeManagerMode = (contract) => contract.methods.getFeeManagerMode().call()\n\nexport const getHomeFee = async (contract) => {\n  const feeInWei = await contract.methods.getHomeFee().call()\n  return new BN(fromWei(feeInWei.toString()))\n}\n\nexport const getForeignFee = async (contract) => {\n  const feeInWei = await contract.methods.getForeignFee().call()\n  return new BN(fromWei(feeInWei.toString()))\n}\n\nexport const getDeployedAtBlock = async (contract) => {\n  try {\n    return await contract.methods.deployedAtBlock().call()\n  } catch (e) {\n    return 0\n  }\n}\n\nexport const getTokenType = async (contract, bridgeAddress) => {\n  try {\n    const bridgeContract = await contract.methods.bridgeContract().call()\n    if (bridgeContract === bridgeAddress) {\n      return ERC_TYPES.ERC677\n    } else {\n      return ERC_TYPES.ERC20\n    }\n  } catch (e) {\n    return ERC_TYPES.ERC20\n  }\n}\n"]},"metadata":{},"sourceType":"module"}