{"ast":null,"code":"import _toConsumableArray from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _initializerDefineProperty from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\nimport _asyncToGenerator from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _temp;\n\nimport { action, observable } from 'mobx';\nimport { abi as BRIDGE_VALIDATORS_ABI } from '../contracts/BridgeValidators.json';\nimport { abi as ERC677_ABI } from '../contracts/ERC677BridgeToken.json';\nimport { abi as BLOCK_REWARD_ABI } from '../contracts/IBlockReward';\nimport { getBlockNumber as _getBlockNumber, getBalance as _getBalance } from './utils/web3';\nimport { fromDecimals } from './utils/decimals';\nimport { getMaxPerTxLimit as _getMaxPerTxLimit, getMinPerTxLimit as _getMinPerTxLimit, getCurrentLimit as _getCurrentLimit, getPastEvents, getMessage, getErc677TokenAddress, getSymbol, getDecimals, getTotalSupply, getBalanceOf, mintedTotally, totalBurntCoins, getName, getFeeManager, getHomeFee, getForeignFee, getFeeManagerMode, ZERO_ADDRESS, getValidatorList, getDeployedAtBlock } from './utils/contract';\nimport { balanceLoaded, removePendingTransaction } from './utils/testUtils';\nimport sleep from './utils/sleep';\nimport BN from 'bignumber.js';\nimport { getBridgeABIs, getUnit, BRIDGE_MODES, decodeFeeManagerMode, FEE_MANAGER_MODE } from './utils/bridgeMode';\nimport ERC20Bytes32Abi from './utils/ERC20Bytes32.abi';\nimport { processLargeArrayAsync } from './utils/array';\nimport { getRewardableData } from \"./utils/rewardable\";\nimport HomeBridgeV1Abi from './utils/HomeBridgeV1.abi';\n\nfunction asyncForEach(_x, _x2) {\n  return _asyncForEach.apply(this, arguments);\n}\n\nfunction _asyncForEach() {\n  _asyncForEach = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee20(array, callback) {\n    var index;\n    return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            index = 0;\n\n          case 1:\n            if (!(index < array.length)) {\n              _context20.next = 7;\n              break;\n            }\n\n            _context20.next = 4;\n            return callback(array[index], index, array);\n\n          case 4:\n            index++;\n            _context20.next = 1;\n            break;\n\n          case 7:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _asyncForEach.apply(this, arguments);\n}\n\nvar HomeStore = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function HomeStore(rootStore) {\n    var _this = this;\n\n    _classCallCheck(this, HomeStore);\n\n    _initializerDefineProperty(this, \"state\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loading\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"events\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"errors\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"balance\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"filter\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"maxCurrentDeposit\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"maxPerTx\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"latestBlockNumber\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"validators\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"validatorsCount\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"homeBridgeValidators\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"requiredSignatures\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"dailyLimit\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"totalSpentPerDay\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"tokenAddress\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"symbol\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"tokenName\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"userBalance\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"statistics\", _descriptor20, this);\n\n    _initializerDefineProperty(this, \"depositFeeCollected\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"withdrawFeeCollected\", _descriptor22, this);\n\n    this.feeManager = {\n      totalFeeDistributedFromSignatures: BN(0),\n      totalFeeDistributedFromAffirmation: BN(0)\n    };\n    this.networkName = process.env.REACT_APP_HOME_NETWORK_NAME || 'Unknown';\n    this.filteredBlockNumber = 0;\n    this.homeBridge = {};\n    this.HOME_BRIDGE_ADDRESS = process.env.REACT_APP_HOME_BRIDGE_ADDRESS;\n    this.explorerTxTemplate = process.env.REACT_APP_HOME_EXPLORER_TX_TEMPLATE || '';\n    this.explorerAddressTemplate = process.env.REACT_APP_HOME_EXPLORER_ADDRESS_TEMPLATE || '';\n    this.tokenContract = {};\n    this.tokenDecimals = 18;\n    this.blockRewardContract = {};\n\n    this.processEvent = function (event) {\n      if (event.returnValues && event.returnValues.recipient) {\n        _this.statistics.users.add(event.returnValues.recipient);\n      }\n\n      if (event.event === \"UserRequestForSignature\" || event.event === 'Deposit') {\n        _this.statistics.deposits++;\n        _this.statistics.depositsValue = _this.statistics.depositsValue.plus(BN(fromDecimals(event.returnValues.value, _this.tokenDecimals)));\n      } else if (event.event === \"AffirmationCompleted\" || event.event === 'Withdraw') {\n        _this.statistics.withdraws++;\n        _this.statistics.withdrawsValue = _this.statistics.withdrawsValue.plus(BN(fromDecimals(event.returnValues.value, _this.tokenDecimals)));\n      } else if (event.event === \"FeeDistributedFromSignatures\") {\n        _this.feeManager.totalFeeDistributedFromSignatures = _this.feeManager.totalFeeDistributedFromSignatures.plus(BN(fromDecimals(event.returnValues.feeAmount, _this.tokenDecimals)));\n      } else if (event.event === \"FeeDistributedFromAffirmation\") {\n        _this.feeManager.totalFeeDistributedFromAffirmation = _this.feeManager.totalFeeDistributedFromAffirmation.plus(BN(fromDecimals(event.returnValues.feeAmount, _this.tokenDecimals)));\n      }\n    };\n\n    this.homeWeb3 = rootStore.web3Store.homeWeb3;\n    this.web3Store = rootStore.web3Store;\n    this.alertStore = rootStore.alertStore;\n    this.rootStore = rootStore;\n    this.waitingForConfirmation = new Set();\n    this.setHome();\n  }\n\n  _createClass(HomeStore, [{\n    key: \"setHome\",\n    value: function () {\n      var _setHome = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _getBridgeABIs, HOME_ABI;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.rootStore.bridgeModeInitialized) {\n                  _context.next = 3;\n                  break;\n                }\n\n                setTimeout(function () {\n                  return _this2.setHome();\n                }, 200);\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _getBridgeABIs = getBridgeABIs(this.rootStore.bridgeMode), HOME_ABI = _getBridgeABIs.HOME_ABI;\n                this.homeBridge = new this.homeWeb3.eth.Contract(HOME_ABI, this.HOME_BRIDGE_ADDRESS);\n\n                if (!(this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_ERC)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.getTokenInfo();\n\n              case 8:\n                _context.next = 13;\n                break;\n\n              case 10:\n                if (!(this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_NATIVE)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 13;\n                return this.getBlockRewardContract();\n\n              case 13:\n                _context.next = 15;\n                return this.getBlockNumber();\n\n              case 15:\n                this.getMinPerTxLimit();\n                this.getMaxPerTxLimit();\n                this.getEvents();\n                this.getBalance();\n                this.getCurrentLimit();\n                this.getFee();\n                this.getValidators();\n                this.getStatistics();\n                this.calculateCollectedFees();\n                setInterval(function () {\n                  _this2.getEvents();\n\n                  _this2.getBalance();\n\n                  _this2.getBlockNumber();\n\n                  _this2.getCurrentLimit();\n                }, 15000);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setHome() {\n        return _setHome.apply(this, arguments);\n      }\n\n      return setHome;\n    }()\n  }, {\n    key: \"getTokenInfo\",\n    value: function () {\n      var _getTokenInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var alternativeContract;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return getErc677TokenAddress(this.homeBridge);\n\n              case 3:\n                this.tokenAddress = _context2.sent;\n                this.tokenContract = new this.homeWeb3.eth.Contract(ERC677_ABI, this.tokenAddress);\n                _context2.next = 7;\n                return getSymbol(this.tokenContract);\n\n              case 7:\n                this.symbol = _context2.sent;\n                _context2.next = 10;\n                return getName(this.tokenContract);\n\n              case 10:\n                this.tokenName = _context2.sent;\n                alternativeContract = new this.homeWeb3.eth.Contract(ERC20Bytes32Abi, this.tokenAddress);\n                _context2.prev = 12;\n                _context2.next = 15;\n                return getSymbol(this.tokenContract);\n\n              case 15:\n                this.symbol = _context2.sent;\n                _context2.next = 25;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](12);\n                _context2.t1 = this.homeWeb3.utils;\n                _context2.next = 23;\n                return getSymbol(alternativeContract);\n\n              case 23:\n                _context2.t2 = _context2.sent;\n                this.symbol = _context2.t1.hexToAscii.call(_context2.t1, _context2.t2).replace(/\\u0000*$/, '');\n\n              case 25:\n                _context2.prev = 25;\n                _context2.next = 28;\n                return getName(this.tokenContract);\n\n              case 28:\n                this.tokenName = _context2.sent;\n                _context2.next = 38;\n                break;\n\n              case 31:\n                _context2.prev = 31;\n                _context2.t3 = _context2[\"catch\"](25);\n                _context2.t4 = this.homeWeb3.utils;\n                _context2.next = 36;\n                return getName(alternativeContract);\n\n              case 36:\n                _context2.t5 = _context2.sent;\n                this.tokenName = _context2.t4.hexToAscii.call(_context2.t4, _context2.t5).replace(/\\u0000*$/, '');\n\n              case 38:\n                _context2.next = 40;\n                return getDecimals(this.tokenContract);\n\n              case 40:\n                this.tokenDecimals = _context2.sent;\n                _context2.next = 46;\n                break;\n\n              case 43:\n                _context2.prev = 43;\n                _context2.t6 = _context2[\"catch\"](0);\n                console.error(_context2.t6);\n\n              case 46:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 43], [12, 18], [25, 31]]);\n      }));\n\n      function getTokenInfo() {\n        return _getTokenInfo.apply(this, arguments);\n      }\n\n      return getTokenInfo;\n    }()\n  }, {\n    key: \"getBlockNumber\",\n    value: function () {\n      var _getBlockNumber2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _getBlockNumber(this.homeWeb3);\n\n              case 3:\n                this.latestBlockNumber = _context3.sent;\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n\n      function getBlockNumber() {\n        return _getBlockNumber2.apply(this, arguments);\n      }\n\n      return getBlockNumber;\n    }()\n  }, {\n    key: \"getMaxPerTxLimit\",\n    value: function () {\n      var _getMaxPerTxLimit2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return _getMaxPerTxLimit(this.homeBridge, this.tokenDecimals);\n\n              case 3:\n                this.maxPerTx = _context4.sent;\n                _context4.next = 9;\n                break;\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(_context4.t0);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 6]]);\n      }));\n\n      function getMaxPerTxLimit() {\n        return _getMaxPerTxLimit2.apply(this, arguments);\n      }\n\n      return getMaxPerTxLimit;\n    }()\n  }, {\n    key: \"getMinPerTxLimit\",\n    value: function () {\n      var _getMinPerTxLimit2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return _getMinPerTxLimit(this.homeBridge, this.tokenDecimals);\n\n              case 3:\n                this.minPerTx = _context5.sent;\n                _context5.next = 9;\n                break;\n\n              case 6:\n                _context5.prev = 6;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(_context5.t0);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 6]]);\n      }));\n\n      function getMinPerTxLimit() {\n        return _getMinPerTxLimit2.apply(this, arguments);\n      }\n\n      return getMinPerTxLimit;\n    }()\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var _this3 = this;\n\n        var mintedCoins, burntCoins;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n\n                if (!(this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_ERC)) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                _context7.next = 4;\n                return getTotalSupply(this.tokenContract);\n\n              case 4:\n                this.balance = _context7.sent;\n                this.web3Store.getWeb3Promise.then(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee6() {\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return getBalanceOf(_this3.tokenContract, _this3.web3Store.defaultAccount.address);\n\n                        case 2:\n                          _this3.userBalance = _context6.sent;\n                          balanceLoaded();\n\n                        case 4:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                })));\n                _context7.next = 21;\n                break;\n\n              case 8:\n                if (!(this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_NATIVE)) {\n                  _context7.next = 18;\n                  break;\n                }\n\n                _context7.next = 11;\n                return mintedTotally(this.blockRewardContract);\n\n              case 11:\n                mintedCoins = _context7.sent;\n                _context7.next = 14;\n                return totalBurntCoins(this.homeBridge);\n\n              case 14:\n                burntCoins = _context7.sent;\n                this.balance = fromDecimals(mintedCoins.minus(burntCoins).toString(10), this.tokenDecimals);\n                _context7.next = 21;\n                break;\n\n              case 18:\n                _context7.next = 20;\n                return _getBalance(this.homeWeb3, this.HOME_BRIDGE_ADDRESS);\n\n              case 20:\n                this.balance = _context7.sent;\n\n              case 21:\n                _context7.next = 27;\n                break;\n\n              case 23:\n                _context7.prev = 23;\n                _context7.t0 = _context7[\"catch\"](0);\n                console.error(_context7.t0);\n                this.errors.push(_context7.t0);\n\n              case 27:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 23]]);\n      }));\n\n      function getBalance() {\n        return _getBalance2.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n  }, {\n    key: \"getFee\",\n    value: function () {\n      var _getFee = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var feeManager, feeManagerModeHash;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return getFeeManager(this.homeBridge);\n\n              case 2:\n                feeManager = _context8.sent;\n\n                if (!(feeManager !== ZERO_ADDRESS)) {\n                  _context8.next = 23;\n                  break;\n                }\n\n                _context8.next = 6;\n                return getFeeManagerMode(this.homeBridge);\n\n              case 6:\n                feeManagerModeHash = _context8.sent;\n                this.feeManager.feeManagerMode = decodeFeeManagerMode(feeManagerModeHash);\n\n                if (!(this.feeManager.feeManagerMode === FEE_MANAGER_MODE.BOTH_DIRECTIONS)) {\n                  _context8.next = 17;\n                  break;\n                }\n\n                _context8.next = 11;\n                return getHomeFee(this.homeBridge);\n\n              case 11:\n                this.feeManager.homeFee = _context8.sent;\n                _context8.next = 14;\n                return getForeignFee(this.homeBridge);\n\n              case 14:\n                this.feeManager.foreignFee = _context8.sent;\n                _context8.next = 21;\n                break;\n\n              case 17:\n                this.feeManager.homeFee = new BN(0);\n                _context8.next = 20;\n                return getForeignFee(this.homeBridge);\n\n              case 20:\n                this.feeManager.foreignFee = _context8.sent;\n\n              case 21:\n                _context8.next = 26;\n                break;\n\n              case 23:\n                this.feeManager.feeManagerMode = FEE_MANAGER_MODE.UNDEFINED;\n                this.feeManager.homeFee = new BN(0);\n                this.feeManager.foreignFee = new BN(0);\n\n              case 26:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getFee() {\n        return _getFee.apply(this, arguments);\n      }\n\n      return getFee;\n    }()\n  }, {\n    key: \"getEvents\",\n    value: function () {\n      var _getEvents = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(fromBlock, toBlock) {\n        var _this4 = this;\n\n        var events, homeEvents, confirmationEvents;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                fromBlock = fromBlock || this.filteredBlockNumber || this.latestBlockNumber - 50;\n                toBlock = toBlock || this.filteredBlockNumber || \"latest\";\n\n                if (fromBlock < 0) {\n                  fromBlock = 0;\n                }\n\n                _context10.next = 6;\n                return getPastEvents(this.homeBridge, fromBlock, toBlock).catch(function (e) {\n                  console.error('Couldn\\'t get events', e);\n                  return [];\n                });\n\n              case 6:\n                events = _context10.sent;\n                homeEvents = [];\n                _context10.next = 10;\n                return asyncForEach(events,\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee9(event) {\n                    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                      while (1) {\n                        switch (_context9.prev = _context9.next) {\n                          case 0:\n                            if (!(event.event === \"SignedForUserRequest\" || event.event === \"CollectedSignatures\")) {\n                              _context9.next = 4;\n                              break;\n                            }\n\n                            _context9.next = 3;\n                            return _this4.getSignedTx(event.returnValues.messageHash);\n\n                          case 3:\n                            event.signedTxHash = _context9.sent;\n\n                          case 4:\n                            homeEvents.push(event);\n\n                          case 5:\n                          case \"end\":\n                            return _context9.stop();\n                        }\n                      }\n                    }, _callee9);\n                  }));\n\n                  return function (_x5) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n                if (!this.filter) {\n                  this.events = homeEvents;\n                }\n\n                if (this.waitingForConfirmation.size) {\n                  confirmationEvents = homeEvents.filter(function (event) {\n                    return event.event === \"AffirmationCompleted\" && _this4.waitingForConfirmation.has(event.returnValues.transactionHash);\n                  });\n                  confirmationEvents.forEach(function (event) {\n                    _this4.alertStore.setLoadingStepIndex(3);\n\n                    var urlExplorer = _this4.getExplorerTxUrl(event.transactionHash);\n\n                    var unitReceived = getUnit(_this4.rootStore.bridgeMode).unitHome;\n                    setTimeout(function () {\n                      _this4.alertStore.pushSuccess(\"\".concat(unitReceived, \" received on \").concat(_this4.networkName, \" on Tx\\n              <a href='\").concat(urlExplorer, \"' target='blank' style=\\\"overflow-wrap: break-word;word-wrap: break-word;\\\">\\n              \").concat(event.transactionHash, \"</a>\"), _this4.alertStore.HOME_TRANSFER_SUCCESS);\n                    }, 2000);\n\n                    _this4.waitingForConfirmation.delete(event.returnValues.transactionHash);\n                  });\n\n                  if (confirmationEvents.length) {\n                    removePendingTransaction();\n                  }\n                }\n\n                return _context10.abrupt(\"return\", homeEvents);\n\n              case 15:\n                _context10.prev = 15;\n                _context10.t0 = _context10[\"catch\"](0);\n                this.alertStore.pushError(\"Cannot establish connection to Home Network.\\n\\n                 Please make sure you have set it up in env variables\", this.alertStore.HOME_CONNECTION_ERROR);\n\n              case 18:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[0, 15]]);\n      }));\n\n      function getEvents(_x3, _x4) {\n        return _getEvents.apply(this, arguments);\n      }\n\n      return getEvents;\n    }()\n  }, {\n    key: \"getSignedTx\",\n    value: function () {\n      var _getSignedTx = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(messageHash) {\n        var message;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return getMessage(this.homeBridge, messageHash);\n\n              case 3:\n                message = _context11.sent;\n                return _context11.abrupt(\"return\", \"0x\" + message.substring(106, 170));\n\n              case 7:\n                _context11.prev = 7;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.error(_context11.t0);\n\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[0, 7]]);\n      }));\n\n      function getSignedTx(_x6) {\n        return _getSignedTx.apply(this, arguments);\n      }\n\n      return getSignedTx;\n    }()\n  }, {\n    key: \"getExplorerTxUrl\",\n    value: function getExplorerTxUrl(txHash) {\n      return this.explorerTxTemplate.replace('%s', txHash);\n    }\n  }, {\n    key: \"getExplorerAddressUrl\",\n    value: function getExplorerAddressUrl(address) {\n      return this.explorerAddressTemplate.replace('%s', address);\n    }\n  }, {\n    key: \"filterByTxHashInReturnValues\",\n    value: function () {\n      var _filterByTxHashInReturnValues = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(transactionHash) {\n        var events;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.getEvents(1, \"latest\");\n\n              case 2:\n                events = _context12.sent;\n                this.events = events.filter(function (event) {\n                  return event.returnValues.transactionHash === transactionHash;\n                });\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function filterByTxHashInReturnValues(_x7) {\n        return _filterByTxHashInReturnValues.apply(this, arguments);\n      }\n\n      return filterByTxHashInReturnValues;\n    }()\n  }, {\n    key: \"filterByTxHash\",\n    value: function () {\n      var _filterByTxHash = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(transactionHash) {\n        var events;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.getEvents(1, \"latest\");\n\n              case 2:\n                events = _context13.sent;\n                this.events = events.filter(function (event) {\n                  return event.transactionHash === transactionHash;\n                });\n\n                if (!(this.events.length > 0 && this.events[0].returnValues && this.events[0].returnValues.transactionHash)) {\n                  _context13.next = 7;\n                  break;\n                }\n\n                _context13.next = 7;\n                return this.rootStore.foreignStore.filterByTxHashInReturnValues(this.events[0].returnValues.transactionHash);\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function filterByTxHash(_x8) {\n        return _filterByTxHash.apply(this, arguments);\n      }\n\n      return filterByTxHash;\n    }()\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(value) {\n      this.filter = value;\n    }\n  }, {\n    key: \"setBlockFilter\",\n    value: function () {\n      var _setBlockFilter = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(blockNumber) {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this.filteredBlockNumber = blockNumber;\n                _context14.next = 3;\n                return this.getEvents();\n\n              case 3:\n                this.events = _context14.sent;\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function setBlockFilter(_x9) {\n        return _setBlockFilter.apply(this, arguments);\n      }\n\n      return setBlockFilter;\n    }()\n  }, {\n    key: \"getCurrentLimit\",\n    value: function () {\n      var _getCurrentLimit2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.prev = 0;\n                _context15.next = 3;\n                return _getCurrentLimit(this.homeBridge, this.tokenDecimals);\n\n              case 3:\n                result = _context15.sent;\n                this.maxCurrentDeposit = result.maxCurrentDeposit;\n                this.dailyLimit = result.dailyLimit;\n                this.totalSpentPerDay = result.totalSpentPerDay;\n                _context15.next = 12;\n                break;\n\n              case 9:\n                _context15.prev = 9;\n                _context15.t0 = _context15[\"catch\"](0);\n                console.error(_context15.t0);\n\n              case 12:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[0, 9]]);\n      }));\n\n      function getCurrentLimit() {\n        return _getCurrentLimit2.apply(this, arguments);\n      }\n\n      return getCurrentLimit;\n    }()\n  }, {\n    key: \"addWaitingForConfirmation\",\n    value: function addWaitingForConfirmation(hash) {\n      this.waitingForConfirmation.add(hash);\n      this.setBlockFilter(0);\n      this.rootStore.foreignStore.setBlockFilter(0);\n    }\n  }, {\n    key: \"getValidators\",\n    value: function () {\n      var _getValidators = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16() {\n        var homeValidatorsAddress;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.prev = 0;\n                _context16.next = 3;\n                return this.homeBridge.methods.validatorContract().call();\n\n              case 3:\n                homeValidatorsAddress = _context16.sent;\n                this.homeBridgeValidators = new this.homeWeb3.eth.Contract(BRIDGE_VALIDATORS_ABI, homeValidatorsAddress);\n                _context16.next = 7;\n                return this.homeBridgeValidators.methods.requiredSignatures().call();\n\n              case 7:\n                this.requiredSignatures = _context16.sent;\n                _context16.next = 10;\n                return this.homeBridgeValidators.methods.validatorCount().call();\n\n              case 10:\n                this.validatorsCount = _context16.sent;\n                _context16.next = 13;\n                return getValidatorList(homeValidatorsAddress, this.homeWeb3.eth);\n\n              case 13:\n                this.validators = _context16.sent;\n                _context16.next = 19;\n                break;\n\n              case 16:\n                _context16.prev = 16;\n                _context16.t0 = _context16[\"catch\"](0);\n                console.error(_context16.t0);\n\n              case 19:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[0, 16]]);\n      }));\n\n      function getValidators() {\n        return _getValidators.apply(this, arguments);\n      }\n\n      return getValidators;\n    }()\n  }, {\n    key: \"getStatistics\",\n    value: function () {\n      var _getStatistics = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17() {\n        var _this5 = this;\n\n        var deployedAtBlock, _getBridgeABIs2, HOME_ABI, abi, contract, events;\n\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.prev = 0;\n                _context17.next = 3;\n                return getDeployedAtBlock(this.homeBridge);\n\n              case 3:\n                deployedAtBlock = _context17.sent;\n                _getBridgeABIs2 = getBridgeABIs(this.rootStore.bridgeMode), HOME_ABI = _getBridgeABIs2.HOME_ABI;\n                abi = [].concat(_toConsumableArray(HomeBridgeV1Abi), _toConsumableArray(HOME_ABI));\n                contract = new this.homeWeb3.eth.Contract(abi, this.HOME_BRIDGE_ADDRESS);\n                _context17.next = 9;\n                return getPastEvents(contract, deployedAtBlock, 'latest');\n\n              case 9:\n                events = _context17.sent;\n                processLargeArrayAsync(events, this.processEvent, function () {\n                  _this5.statistics.finished = true;\n                  _this5.statistics.totalBridged = _this5.statistics.depositsValue.plus(_this5.statistics.withdrawsValue);\n                });\n                _context17.next = 17;\n                break;\n\n              case 13:\n                _context17.prev = 13;\n                _context17.t0 = _context17[\"catch\"](0);\n                console.error(_context17.t0);\n                this.getStatistics();\n\n              case 17:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[0, 13]]);\n      }));\n\n      function getStatistics() {\n        return _getStatistics.apply(this, arguments);\n      }\n\n      return getStatistics;\n    }()\n  }, {\n    key: \"calculateCollectedFees\",\n    value: function calculateCollectedFees() {\n      var _this6 = this;\n\n      if (!this.statistics.finished || !this.rootStore.foreignStore.feeEventsFinished || !this.feeManager.feeManagerMode || !this.rootStore.foreignStore.feeManager.feeManagerMode) {\n        setTimeout(function () {\n          _this6.calculateCollectedFees();\n        }, 1000);\n        return;\n      }\n\n      var data = getRewardableData(this.feeManager, this.rootStore.foreignStore.feeManager);\n      this.depositFeeCollected.type = data.depositSymbol === 'home' ? this.symbol : this.rootStore.foreignStore.symbol;\n      this.withdrawFeeCollected.type = data.withdrawSymbol === 'home' ? this.symbol : this.rootStore.foreignStore.symbol;\n      this.depositFeeCollected.shouldDisplay = data.displayDeposit;\n      this.withdrawFeeCollected.shouldDisplay = data.displayWithdraw;\n      this.depositFeeCollected.value = data.depositSymbol === 'home' ? this.feeManager.totalFeeDistributedFromSignatures : this.rootStore.foreignStore.feeManager.totalFeeDistributedFromSignatures;\n      this.withdrawFeeCollected.value = data.withdrawSymbol === 'home' ? this.feeManager.totalFeeDistributedFromAffirmation : this.rootStore.foreignStore.feeManager.totalFeeDistributedFromAffirmation;\n      this.depositFeeCollected.finished = true;\n      this.withdrawFeeCollected.finished = true;\n    }\n  }, {\n    key: \"getDailyQuotaCompleted\",\n    value: function getDailyQuotaCompleted() {\n      return this.dailyLimit ? this.totalSpentPerDay / this.dailyLimit * 100 : 0;\n    }\n  }, {\n    key: \"getDisplayedBalance\",\n    value: function getDisplayedBalance() {\n      return this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_ERC ? this.userBalance : this.web3Store.defaultAccount.homeBalance;\n    }\n  }, {\n    key: \"getBlockRewardContract\",\n    value: function () {\n      var _getBlockRewardContract = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee18() {\n        var blockRewardAddress;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.homeBridge.methods.blockRewardContract().call();\n\n              case 2:\n                blockRewardAddress = _context18.sent;\n                this.blockRewardContract = new this.homeWeb3.eth.Contract(BLOCK_REWARD_ABI, blockRewardAddress);\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function getBlockRewardContract() {\n        return _getBlockRewardContract.apply(this, arguments);\n      }\n\n      return getBlockRewardContract;\n    }()\n  }, {\n    key: \"waitUntilProcessed\",\n    value: function () {\n      var _waitUntilProcessed = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19(txHash, value) {\n        var _this7 = this;\n\n        var web3, bridge, tx, messageHash, numSigned, processed;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                web3 = this.rootStore.foreignStore.foreignWeb3;\n                bridge = this.homeBridge;\n                _context19.next = 4;\n                return web3.eth.getTransaction(txHash);\n\n              case 4:\n                tx = _context19.sent;\n                messageHash = web3.utils.soliditySha3(tx.from, web3.utils.toBN(value).toString(), txHash);\n                _context19.next = 8;\n                return bridge.methods.numAffirmationsSigned(messageHash).call();\n\n              case 8:\n                numSigned = _context19.sent;\n                _context19.next = 11;\n                return bridge.methods.isAlreadyProcessed(numSigned).call();\n\n              case 11:\n                processed = _context19.sent;\n\n                if (!processed) {\n                  _context19.next = 16;\n                  break;\n                }\n\n                return _context19.abrupt(\"return\", Promise.resolve());\n\n              case 16:\n                return _context19.abrupt(\"return\", sleep(5000).then(function () {\n                  return _this7.waitUntilProcessed(txHash, value);\n                }));\n\n              case 17:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function waitUntilProcessed(_x10, _x11) {\n        return _waitUntilProcessed.apply(this, arguments);\n      }\n\n      return waitUntilProcessed;\n    }()\n  }]);\n\n  return HomeStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"state\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"events\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"errors\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"balance\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"filter\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"maxCurrentDeposit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"maxPerTx\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"latestBlockNumber\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"validators\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"validatorsCount\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"homeBridgeValidators\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"requiredSignatures\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"dailyLimit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"totalSpentPerDay\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"tokenAddress\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"symbol\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return process.env.REACT_APP_HOME_NATIVE_NAME || 'NONAME';\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"tokenName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"userBalance\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"statistics\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      deposits: 0,\n      depositsValue: BN(0),\n      withdraws: 0,\n      withdrawsValue: BN(0),\n      totalBridged: BN(0),\n      users: new Set(),\n      finished: false\n    };\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"depositFeeCollected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      value: BN(0),\n      type: '',\n      shouldDisplay: false,\n      finished: false\n    };\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"withdrawFeeCollected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      value: BN(0),\n      type: '',\n      shouldDisplay: false,\n      finished: false\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getTokenInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getTokenInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getBlockNumber\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getBlockNumber\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getMaxPerTxLimit\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getMaxPerTxLimit\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getMinPerTxLimit\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getMinPerTxLimit\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getBalance\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getBalance\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getFee\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getFee\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getEvents\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getEvents\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filterByTxHashInReturnValues\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"filterByTxHashInReturnValues\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filterByTxHash\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"filterByTxHash\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setFilter\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setFilter\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setBlockFilter\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setBlockFilter\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getCurrentLimit\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getCurrentLimit\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getValidators\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getValidators\"), _class.prototype)), _class);\nexport default HomeStore;","map":{"version":3,"sources":["/home/usuario/Escritorio/csd-bridge-ui/src/stores/HomeStore.js"],"names":["action","observable","abi","BRIDGE_VALIDATORS_ABI","ERC677_ABI","BLOCK_REWARD_ABI","getBlockNumber","getBalance","fromDecimals","getMaxPerTxLimit","getMinPerTxLimit","getCurrentLimit","getPastEvents","getMessage","getErc677TokenAddress","getSymbol","getDecimals","getTotalSupply","getBalanceOf","mintedTotally","totalBurntCoins","getName","getFeeManager","getHomeFee","getForeignFee","getFeeManagerMode","ZERO_ADDRESS","getValidatorList","getDeployedAtBlock","balanceLoaded","removePendingTransaction","sleep","BN","getBridgeABIs","getUnit","BRIDGE_MODES","decodeFeeManagerMode","FEE_MANAGER_MODE","ERC20Bytes32Abi","processLargeArrayAsync","getRewardableData","HomeBridgeV1Abi","asyncForEach","array","callback","index","length","HomeStore","rootStore","feeManager","totalFeeDistributedFromSignatures","totalFeeDistributedFromAffirmation","networkName","process","env","REACT_APP_HOME_NETWORK_NAME","filteredBlockNumber","homeBridge","HOME_BRIDGE_ADDRESS","REACT_APP_HOME_BRIDGE_ADDRESS","explorerTxTemplate","REACT_APP_HOME_EXPLORER_TX_TEMPLATE","explorerAddressTemplate","REACT_APP_HOME_EXPLORER_ADDRESS_TEMPLATE","tokenContract","tokenDecimals","blockRewardContract","processEvent","event","returnValues","recipient","statistics","users","add","deposits","depositsValue","plus","value","withdraws","withdrawsValue","feeAmount","homeWeb3","web3Store","alertStore","waitingForConfirmation","Set","setHome","bridgeModeInitialized","setTimeout","bridgeMode","HOME_ABI","eth","Contract","ERC_TO_ERC","getTokenInfo","ERC_TO_NATIVE","getBlockRewardContract","getEvents","getFee","getValidators","getStatistics","calculateCollectedFees","setInterval","tokenAddress","symbol","tokenName","alternativeContract","utils","hexToAscii","replace","console","error","latestBlockNumber","maxPerTx","minPerTx","balance","getWeb3Promise","then","defaultAccount","address","userBalance","mintedCoins","burntCoins","minus","toString","errors","push","feeManagerModeHash","feeManagerMode","BOTH_DIRECTIONS","homeFee","foreignFee","UNDEFINED","fromBlock","toBlock","catch","e","events","homeEvents","getSignedTx","messageHash","signedTxHash","filter","size","confirmationEvents","has","transactionHash","forEach","setLoadingStepIndex","urlExplorer","getExplorerTxUrl","unitReceived","unitHome","pushSuccess","HOME_TRANSFER_SUCCESS","delete","pushError","HOME_CONNECTION_ERROR","message","substring","txHash","foreignStore","filterByTxHashInReturnValues","blockNumber","result","maxCurrentDeposit","dailyLimit","totalSpentPerDay","hash","setBlockFilter","methods","validatorContract","call","homeValidatorsAddress","homeBridgeValidators","requiredSignatures","validatorCount","validatorsCount","validators","deployedAtBlock","contract","finished","totalBridged","feeEventsFinished","data","depositFeeCollected","type","depositSymbol","withdrawFeeCollected","withdrawSymbol","shouldDisplay","displayDeposit","displayWithdraw","homeBalance","blockRewardAddress","web3","foreignWeb3","bridge","getTransaction","tx","soliditySha3","from","toBN","numAffirmationsSigned","numSigned","isAlreadyProcessed","processed","Promise","resolve","waitUntilProcessed","REACT_APP_HOME_NATIVE_NAME"],"mappings":"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","sourcesContent":["import { action, observable } from 'mobx';\nimport { abi as BRIDGE_VALIDATORS_ABI } from '../contracts/BridgeValidators.json'\nimport { abi as ERC677_ABI } from '../contracts/ERC677BridgeToken.json'\nimport { abi as BLOCK_REWARD_ABI } from '../contracts/IBlockReward'\nimport { getBlockNumber, getBalance } from './utils/web3'\nimport { fromDecimals } from './utils/decimals'\nimport {\n  getMaxPerTxLimit,\n  getMinPerTxLimit,\n  getCurrentLimit,\n  getPastEvents,\n  getMessage,\n  getErc677TokenAddress,\n  getSymbol,\n  getDecimals,\n  getTotalSupply,\n  getBalanceOf,\n  mintedTotally,\n  totalBurntCoins,\n  getName,\n  getFeeManager,\n  getHomeFee,\n  getForeignFee,\n  getFeeManagerMode,\n  ZERO_ADDRESS,\n  getValidatorList,\n  getDeployedAtBlock\n} from './utils/contract'\nimport { balanceLoaded, removePendingTransaction } from './utils/testUtils'\nimport sleep from './utils/sleep'\nimport BN from 'bignumber.js'\nimport { getBridgeABIs, getUnit, BRIDGE_MODES, decodeFeeManagerMode, FEE_MANAGER_MODE } from './utils/bridgeMode'\nimport ERC20Bytes32Abi from './utils/ERC20Bytes32.abi'\nimport { processLargeArrayAsync } from './utils/array'\nimport { getRewardableData } from \"./utils/rewardable\"\nimport HomeBridgeV1Abi from './utils/HomeBridgeV1.abi'\n\nasync function asyncForEach(array, callback) {\n  for (let index = 0; index < array.length; index++) {\n    await callback(array[index], index, array)\n  }\n}\n\nclass HomeStore {\n  @observable state = null;\n  @observable loading = true;\n  @observable events = [];\n  @observable errors = [];\n  @observable balance = \"\";\n  @observable filter = false;\n  @observable maxCurrentDeposit = \"\";\n  @observable maxPerTx = \"\";\n  @observable latestBlockNumber = 0;\n  @observable validators = []\n  @observable validatorsCount = 0\n  @observable homeBridgeValidators = ''\n  @observable requiredSignatures = 0\n  @observable dailyLimit = 0\n  @observable totalSpentPerDay = 0\n  @observable tokenAddress = '';\n  @observable symbol = process.env.REACT_APP_HOME_NATIVE_NAME || 'NONAME';\n  @observable tokenName = '';\n  @observable userBalance = 0\n  @observable statistics = {\n    deposits: 0,\n    depositsValue: BN(0),\n    withdraws: 0,\n    withdrawsValue: BN(0),\n    totalBridged: BN(0),\n    users: new Set(),\n    finished: false\n  }\n  @observable depositFeeCollected = {\n    value: BN(0),\n    type: '',\n    shouldDisplay: false,\n    finished: false\n  }\n  @observable withdrawFeeCollected = {\n    value: BN(0),\n    type: '',\n    shouldDisplay: false,\n    finished: false\n  }\n  feeManager = {\n    totalFeeDistributedFromSignatures: BN(0),\n    totalFeeDistributedFromAffirmation: BN(0)\n  };\n  networkName = process.env.REACT_APP_HOME_NETWORK_NAME || 'Unknown'\n  filteredBlockNumber = 0\n  homeBridge = {};\n  HOME_BRIDGE_ADDRESS = process.env.REACT_APP_HOME_BRIDGE_ADDRESS;\n  explorerTxTemplate = process.env.REACT_APP_HOME_EXPLORER_TX_TEMPLATE || ''\n  explorerAddressTemplate = process.env.REACT_APP_HOME_EXPLORER_ADDRESS_TEMPLATE || ''\n  tokenContract = {}\n  tokenDecimals = 18;\n  blockRewardContract = {}\n\n  constructor (rootStore) {\n    this.homeWeb3 = rootStore.web3Store.homeWeb3\n    this.web3Store = rootStore.web3Store\n    this.alertStore = rootStore.alertStore\n    this.rootStore = rootStore\n    this.waitingForConfirmation = new Set()\n    this.setHome()\n  }\n\n  async setHome(){\n    if (!this.rootStore.bridgeModeInitialized) {\n      setTimeout(() => this.setHome(), 200)\n      return\n    }\n    const { HOME_ABI } = getBridgeABIs(this.rootStore.bridgeMode)\n    this.homeBridge = new this.homeWeb3.eth.Contract(HOME_ABI, this.HOME_BRIDGE_ADDRESS);\n    if (this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_ERC) {\n      await this.getTokenInfo()\n    } else if(this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_NATIVE) {\n      await this.getBlockRewardContract()\n    }\n    await this.getBlockNumber()\n    this.getMinPerTxLimit()\n    this.getMaxPerTxLimit()\n    this.getEvents()\n    this.getBalance()\n    this.getCurrentLimit()\n    this.getFee()\n    this.getValidators()\n    this.getStatistics()\n    this.calculateCollectedFees()\n    setInterval(() => {\n      this.getEvents()\n      this.getBalance()\n      this.getBlockNumber()\n      this.getCurrentLimit()\n    }, 15000)\n  }\n\n  @action\n  async getTokenInfo() {\n    try {\n      this.tokenAddress = await getErc677TokenAddress(this.homeBridge)\n      this.tokenContract = new this.homeWeb3.eth.Contract(ERC677_ABI, this.tokenAddress);\n      this.symbol = await getSymbol(this.tokenContract)\n      this.tokenName = await getName(this.tokenContract)\n      const alternativeContract = new this.homeWeb3.eth.Contract(ERC20Bytes32Abi, this.tokenAddress);\n      try {\n        this.symbol =await getSymbol(this.tokenContract)\n      } catch(e) {\n        this.symbol = this.homeWeb3.utils.hexToAscii(await getSymbol(alternativeContract)).replace(/\\u0000*$/, '')\n      }\n      try {\n        this.tokenName = await getName(this.tokenContract)\n      } catch(e) {\n        this.tokenName = this.homeWeb3.utils.hexToAscii(await getName(alternativeContract)).replace(/\\u0000*$/, '')\n      }\n      this.tokenDecimals = await getDecimals(this.tokenContract)\n    } catch(e) {\n      console.error(e)\n    }\n  }\n\n  @action\n  async getBlockNumber() {\n    try {\n      this.latestBlockNumber = await getBlockNumber(this.homeWeb3)\n    } catch(e){\n      console.error(e)\n    }\n  }\n\n  @action\n  async getMaxPerTxLimit(){\n    try {\n      this.maxPerTx = await getMaxPerTxLimit(this.homeBridge,this.tokenDecimals)\n    } catch(e){\n      console.error(e)\n    }\n  }\n\n  @action\n  async getMinPerTxLimit(){\n    try {\n      this.minPerTx = await getMinPerTxLimit(this.homeBridge,this.tokenDecimals)\n    } catch(e){\n      console.error(e)\n    }\n  }\n\n  @action\n  async getBalance() {\n    try {\n      if (this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_ERC) {\n        this.balance = await getTotalSupply(this.tokenContract)\n        this.web3Store.getWeb3Promise.then(async () => {\n          this.userBalance = await getBalanceOf(this.tokenContract, this.web3Store.defaultAccount.address)\n          balanceLoaded()\n        })\n      } else if (this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_NATIVE) {\n        const mintedCoins = await mintedTotally(this.blockRewardContract)\n        const burntCoins = await totalBurntCoins(this.homeBridge)\n        this.balance = fromDecimals(mintedCoins.minus(burntCoins).toString(10),this.tokenDecimals)\n      } else {\n        this.balance = await getBalance(this.homeWeb3, this.HOME_BRIDGE_ADDRESS)\n      }\n    } catch(e) {\n      console.error(e)\n      this.errors.push(e)\n    }\n  }\n\n  @action\n  async getFee() {\n    const feeManager = await getFeeManager(this.homeBridge)\n    if (feeManager !== ZERO_ADDRESS) {\n      const feeManagerModeHash = await getFeeManagerMode(this.homeBridge)\n      this.feeManager.feeManagerMode = decodeFeeManagerMode(feeManagerModeHash)\n\n      if(this.feeManager.feeManagerMode === FEE_MANAGER_MODE.BOTH_DIRECTIONS) {\n        this.feeManager.homeFee = await getHomeFee(this.homeBridge)\n        this.feeManager.foreignFee = await getForeignFee(this.homeBridge)\n      } else {\n        this.feeManager.homeFee = new BN(0);\n        this.feeManager.foreignFee = await getForeignFee(this.homeBridge)\n      }\n    } else {\n      this.feeManager.feeManagerMode = FEE_MANAGER_MODE.UNDEFINED\n      this.feeManager.homeFee = new BN(0);\n      this.feeManager.foreignFee = new BN(0);\n    }\n  }\n\n  @action\n  async getEvents(fromBlock, toBlock) {\n    try {\n      fromBlock = fromBlock || this.filteredBlockNumber || this.latestBlockNumber - 50\n      toBlock =  toBlock || this.filteredBlockNumber || \"latest\"\n\n      if (fromBlock < 0) {\n        fromBlock = 0\n      }\n\n      let events = await getPastEvents(this.homeBridge, fromBlock, toBlock).catch(e => {\n        console.error('Couldn\\'t get events', e)\n        return []\n      })\n\n      let homeEvents = []\n      await asyncForEach(events, (async (event) => {\n        if(event.event === \"SignedForUserRequest\" || event.event === \"CollectedSignatures\") {\n          event.signedTxHash = await this.getSignedTx(event.returnValues.messageHash)\n        }\n        homeEvents.push(event)\n      }))\n\n      if(!this.filter){\n        this.events = homeEvents;\n      }\n\n      if(this.waitingForConfirmation.size) {\n        const confirmationEvents = homeEvents.filter((event) => event.event === \"AffirmationCompleted\" && this.waitingForConfirmation.has(event.returnValues.transactionHash))\n        confirmationEvents.forEach(event => {\n          this.alertStore.setLoadingStepIndex(3)\n          const urlExplorer = this.getExplorerTxUrl(event.transactionHash)\n          const unitReceived = getUnit(this.rootStore.bridgeMode).unitHome\n          setTimeout(() => {\n            this.alertStore.pushSuccess(`${unitReceived} received on ${this.networkName} on Tx\n              <a href='${urlExplorer}' target='blank' style=\"overflow-wrap: break-word;word-wrap: break-word;\">\n              ${event.transactionHash}</a>`, this.alertStore.HOME_TRANSFER_SUCCESS)}\n            , 2000)\n          this.waitingForConfirmation.delete(event.returnValues.transactionHash)\n        })\n\n        if(confirmationEvents.length) {\n          removePendingTransaction()\n        }\n      }\n\n      return homeEvents\n    } catch(e) {\n      this.alertStore.pushError(`Cannot establish connection to Home Network.\\n\n                 Please make sure you have set it up in env variables`, this.alertStore.HOME_CONNECTION_ERROR)\n    }\n  }\n\n  async getSignedTx(messageHash){\n    try {\n      const message = await getMessage(this.homeBridge, messageHash)\n      return \"0x\" + message.substring(106, 170);\n    } catch(e){\n      console.error(e)\n    }\n  }\n\n  getExplorerTxUrl(txHash) {\n    return this.explorerTxTemplate.replace('%s', txHash)\n  }\n\n  getExplorerAddressUrl(address) {\n    return this.explorerAddressTemplate.replace('%s', address)\n  }\n\n  @action\n  async filterByTxHashInReturnValues(transactionHash) {\n    const events = await this.getEvents(1,\"latest\");\n    this.events = events.filter((event) => event.returnValues.transactionHash === transactionHash)\n  }\n  @action\n  async filterByTxHash(transactionHash) {\n    const events = await this.getEvents(1,\"latest\");\n    this.events = events.filter((event) => event.transactionHash === transactionHash)\n    if(this.events.length > 0 && this.events[0].returnValues && this.events[0].returnValues.transactionHash) {\n      await this.rootStore.foreignStore.filterByTxHashInReturnValues(this.events[0].returnValues.transactionHash)\n    }\n  }\n\n  @action\n  setFilter(value){\n    this.filter = value\n  }\n\n  @action\n  async setBlockFilter(blockNumber){\n    this.filteredBlockNumber = blockNumber\n    this.events = await this.getEvents()\n  }\n\n  @action\n  async getCurrentLimit(){\n    try {\n      const result = await getCurrentLimit(this.homeBridge,this.tokenDecimals)\n      this.maxCurrentDeposit = result.maxCurrentDeposit\n      this.dailyLimit = result.dailyLimit\n      this.totalSpentPerDay = result.totalSpentPerDay\n    } catch(e){\n      console.error(e)\n    }\n  }\n\n  addWaitingForConfirmation(hash) {\n    this.waitingForConfirmation.add(hash)\n    this.setBlockFilter(0)\n    this.rootStore.foreignStore.setBlockFilter(0)\n  }\n\n  @action\n  async getValidators(){\n    try {\n      const homeValidatorsAddress = await this.homeBridge.methods.validatorContract().call()\n      this.homeBridgeValidators = new this.homeWeb3.eth.Contract(BRIDGE_VALIDATORS_ABI, homeValidatorsAddress);\n\n      this.requiredSignatures = await this.homeBridgeValidators.methods.requiredSignatures().call()\n      this.validatorsCount = await this.homeBridgeValidators.methods.validatorCount().call()\n\n      this.validators = await getValidatorList(homeValidatorsAddress, this.homeWeb3.eth)\n    } catch(e){\n      console.error(e)\n    }\n  }\n\n  async getStatistics() {\n    try {\n      const deployedAtBlock = await getDeployedAtBlock(this.homeBridge);\n      const { HOME_ABI } = getBridgeABIs(this.rootStore.bridgeMode)\n      const abi = [...HomeBridgeV1Abi, ...HOME_ABI]\n      const contract = new this.homeWeb3.eth.Contract(abi, this.HOME_BRIDGE_ADDRESS);\n      const events = await getPastEvents(contract, deployedAtBlock, 'latest')\n      processLargeArrayAsync(\n        events,\n        this.processEvent,\n        () => {\n          this.statistics.finished = true\n          this.statistics.totalBridged = this.statistics.depositsValue.plus(this.statistics.withdrawsValue)\n        })\n    } catch(e){\n      console.error(e)\n      this.getStatistics()\n    }\n  }\n\n  processEvent = (event) => {\n    if(event.returnValues && event.returnValues.recipient) {\n      this.statistics.users.add(event.returnValues.recipient)\n    }\n    if(event.event === \"UserRequestForSignature\" || event.event === 'Deposit') {\n      this.statistics.deposits++\n      this.statistics.depositsValue = this.statistics.depositsValue.plus(BN(fromDecimals(event.returnValues.value,this.tokenDecimals)))\n    } else if (event.event === \"AffirmationCompleted\" || event.event === 'Withdraw') {\n      this.statistics.withdraws++\n      this.statistics.withdrawsValue = this.statistics.withdrawsValue.plus(BN(fromDecimals(event.returnValues.value,this.tokenDecimals)))\n    } else if (event.event === \"FeeDistributedFromSignatures\") {\n      this.feeManager.totalFeeDistributedFromSignatures = this.feeManager.totalFeeDistributedFromSignatures.plus(BN(fromDecimals(event.returnValues.feeAmount, this.tokenDecimals)))\n    } else if (event.event === \"FeeDistributedFromAffirmation\") {\n      this.feeManager.totalFeeDistributedFromAffirmation = this.feeManager.totalFeeDistributedFromAffirmation.plus(BN(fromDecimals(event.returnValues.feeAmount, this.tokenDecimals)))\n    }\n  }\n\n  calculateCollectedFees() {\n    if (!this.statistics.finished\n      || !this.rootStore.foreignStore.feeEventsFinished\n      || !this.feeManager.feeManagerMode\n      || !this.rootStore.foreignStore.feeManager.feeManagerMode) {\n      setTimeout(() => { this.calculateCollectedFees() }, 1000)\n      return\n    }\n\n    const data = getRewardableData(this.feeManager, this.rootStore.foreignStore.feeManager)\n\n    this.depositFeeCollected.type = data.depositSymbol === 'home' ? this.symbol : this.rootStore.foreignStore.symbol\n    this.withdrawFeeCollected.type = data.withdrawSymbol === 'home' ? this.symbol : this.rootStore.foreignStore.symbol\n    this.depositFeeCollected.shouldDisplay = data.displayDeposit\n    this.withdrawFeeCollected.shouldDisplay = data.displayWithdraw\n\n    this.depositFeeCollected.value = data.depositSymbol === 'home'\n      ? this.feeManager.totalFeeDistributedFromSignatures\n      : this.rootStore.foreignStore.feeManager.totalFeeDistributedFromSignatures\n\n    this.withdrawFeeCollected.value = data.withdrawSymbol === 'home'\n      ? this.feeManager.totalFeeDistributedFromAffirmation\n      : this.rootStore.foreignStore.feeManager.totalFeeDistributedFromAffirmation\n\n    this.depositFeeCollected.finished = true\n    this.withdrawFeeCollected.finished = true\n  }\n\n  getDailyQuotaCompleted() {\n    return this.dailyLimit ? this.totalSpentPerDay / this.dailyLimit * 100 : 0\n  }\n\n  getDisplayedBalance() {\n    return this.rootStore.bridgeMode === BRIDGE_MODES.ERC_TO_ERC ? this.userBalance : this.web3Store.defaultAccount.homeBalance\n  }\n\n  async getBlockRewardContract () {\n    const blockRewardAddress = await this.homeBridge.methods.blockRewardContract().call()\n    this.blockRewardContract = new this.homeWeb3.eth.Contract(BLOCK_REWARD_ABI, blockRewardAddress)\n  }\n\n  async waitUntilProcessed(txHash, value) {\n    const web3 = this.rootStore.foreignStore.foreignWeb3\n    const bridge = this.homeBridge\n\n    const tx = await web3.eth.getTransaction(txHash)\n    const messageHash = web3.utils.soliditySha3(tx.from, web3.utils.toBN(value).toString(), txHash)\n    const numSigned = await bridge.methods.numAffirmationsSigned(messageHash).call()\n    const processed = await bridge.methods.isAlreadyProcessed(numSigned).call()\n\n    if (processed) {\n      return Promise.resolve()\n    } else {\n      return sleep(5000).then(() => this.waitUntilProcessed(txHash, value))\n    }\n  }\n}\n\nexport default HomeStore;\n"]},"metadata":{},"sourceType":"module"}