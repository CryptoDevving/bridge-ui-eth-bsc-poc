{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Escritorio/csd-bridge-ui/src/components/events/Event.js\";\nimport React from 'react';\nimport { fromWei } from 'web3-utils';\nimport numeral from 'numeral';\nimport { CopyIcon } from '../icons/CopyIcon';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nexport var Event = function Event(_ref) {\n  var color = _ref.color,\n      eventName = _ref.eventName,\n      transactionHash = _ref.transactionHash,\n      recipient = _ref.recipient,\n      value = _ref.value,\n      blockNumber = _ref.blockNumber,\n      txUrl = _ref.txUrl,\n      accountUrl = _ref.accountUrl;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"event\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"event-tx-container txhash-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"event-name background-\".concat(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, eventName), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: txUrl,\n    target: \"_blank\",\n    className: \"event-txhash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, transactionHash.slice(0, 18).concat('...')), React.createElement(CopyToClipboard, {\n    text: transactionHash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"copy-icon copy-icon-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(CopyIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))))), React.createElement(\"a\", {\n    href: accountUrl,\n    target: \"_blank\",\n    className: \"event-recipient recipient-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, recipient ? React.createElement(\"strong\", {\n    className: \"only-mobile event-recipient-label \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Recipient\") : '', recipient ? recipient.slice(0, 27).concat('...') : ''), React.createElement(\"span\", {\n    className: \"event-value value-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, recipient ? React.createElement(\"strong\", {\n    className: \"only-mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Value\") : '', value ? numeral(fromWei(value)).format('0,0.00', Math.floor) : ''), React.createElement(\"span\", {\n    className: \"event-block block-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    className: \"only-mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Block\"), blockNumber)), React.createElement(\"div\", {\n    className: \"event-separator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/usuario/Escritorio/csd-bridge-ui/src/components/events/Event.js"],"names":["React","fromWei","numeral","CopyIcon","CopyToClipboard","Event","color","eventName","transactionHash","recipient","value","blockNumber","txUrl","accountUrl","slice","concat","format","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,SAAV,QAAUA,SAAV;AAAA,MAAqBC,eAArB,QAAqBA,eAArB;AAAA,MAAsCC,SAAtC,QAAsCA,SAAtC;AAAA,MAAiDC,KAAjD,QAAiDA,KAAjD;AAAA,MAAwDC,WAAxD,QAAwDA,WAAxD;AAAA,MAAqEC,KAArE,QAAqEA,KAArE;AAAA,MAA4EC,UAA5E,QAA4EA,UAA5E;AAAA,SACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,kCAA2BP,KAA3B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDC,SAApD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAEK,KAAT;AAAgB,IAAA,MAAM,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0DJ,eAAe,CAACM,KAAhB,CAAsB,CAAtB,EAAwB,EAAxB,EAA4BC,MAA5B,CAAmC,KAAnC,CAA1D,CADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEP,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5C,CADF,CAFF,CAFF,CADF,EAUE;AAAG,IAAA,IAAI,EAAEK,UAAT;AAAqB,IAAA,MAAM,EAAC,QAA5B;AAAqC,IAAA,SAAS,EAAC,kCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,GAAG;AAAQ,IAAA,SAAS,EAAC,oCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,GAA+E,EAD3F,EAEGA,SAAS,GAAGA,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAkB,EAAlB,EAAsBC,MAAtB,CAA6B,KAA7B,CAAH,GAAyC,EAFrD,CAVF,EAcE;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,GAAG;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,GAAoD,EADhE,EAEGC,KAAK,GAAGR,OAAO,CAACD,OAAO,CAACS,KAAD,CAAR,CAAP,CAAwBM,MAAxB,CAA+B,QAA/B,EAAyCC,IAAI,CAACC,KAA9C,CAAH,GAA0D,EAFlE,CAdF,EAkBE;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2C;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3C,EAA0FP,WAA1F,CAlBF,CADF,EAqBE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADmB;AAAA,CAAd","sourcesContent":["import React from 'react'\nimport { fromWei } from 'web3-utils'\nimport numeral from 'numeral'\nimport { CopyIcon } from '../icons/CopyIcon'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nexport const Event = ({ color, eventName, transactionHash, recipient, value, blockNumber, txUrl, accountUrl }) => (\n  <div>\n    <div className=\"event\">\n      <div className=\"event-tx-container txhash-column\">\n        <span className={`event-name background-${color}`}>{eventName}</span>\n        <span>\n          <a href={txUrl} target=\"_blank\" className=\"event-txhash\">{transactionHash.slice(0,18).concat('...')}</a>\n          <CopyToClipboard text={transactionHash}>\n            <span className=\"copy-icon copy-icon-right\"><CopyIcon /></span>\n          </CopyToClipboard>\n        </span>\n      </div>\n      <a href={accountUrl} target=\"_blank\" className=\"event-recipient recipient-column\">\n        {recipient ? <strong className=\"only-mobile event-recipient-label \">Recipient</strong> : ''}\n        {recipient ? recipient.slice(0,27).concat('...') : ''}\n      </a>\n      <span className=\"event-value value-column\">\n        {recipient ? <strong className=\"only-mobile\">Value</strong> : ''}\n        {value ? numeral(fromWei(value)).format('0,0.00', Math.floor) : ''}\n      </span>\n      <span className=\"event-block block-column\"><strong className=\"only-mobile\">Block</strong>{blockNumber}</span>\n    </div>\n    <div className=\"event-separator\" />\n  </div>\n\n)\n"]},"metadata":{},"sourceType":"module"}