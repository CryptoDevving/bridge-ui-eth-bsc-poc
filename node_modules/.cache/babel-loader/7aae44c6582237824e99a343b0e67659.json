{"ast":null,"code":"import _classCallCheck from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/usuario/Escritorio/csd-bridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/usuario/Escritorio/csd-bridge-ui/src/components/SweetAlert.js\";\n\nimport React from 'react';\nimport swal from 'sweetalert';\nimport { inject, observer } from \"mobx-react\";\nexport var SweetAlert = (_dec = inject(\"RootStore\"), _dec(_class = observer(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SweetAlert, _React$Component);\n\n  function SweetAlert() {\n    _classCallCheck(this, SweetAlert);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SweetAlert).apply(this, arguments));\n  }\n\n  _createClass(SweetAlert, [{\n    key: \"componentWillReact\",\n    value: function componentWillReact() {\n      var alertStore = this.props.RootStore.alertStore;\n\n      if (alertStore.alerts.length > 0) {\n        var alert = alertStore.alerts.slice()[0];\n        swal(alert).then(function () {\n          alertStore.remove(alert);\n        });\n      }\n    }\n  }, {\n    key: \"logErrors\",\n    value: function logErrors() {\n      var alertStore = this.props.RootStore.alertStore;\n      var errors = alertStore.alerts.filter(function (alert) {\n        return alert.type === 'error';\n      });\n\n      if (errors.length) {\n        console.log('Found errors:', errors.length);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.logErrors();\n      return React.createElement(\"div\", {\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SweetAlert;\n}(React.Component)) || _class) || _class);","map":{"version":3,"sources":["/home/usuario/Escritorio/csd-bridge-ui/src/components/SweetAlert.js"],"names":["React","swal","inject","observer","SweetAlert","alertStore","props","RootStore","alerts","length","alert","slice","then","remove","errors","filter","type","console","log","logErrors","display","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAIA,WAAaC,UAAb,WAFCF,MAAM,CAAC,WAAD,CAEP,gBADCC,QACD;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yCACsB;AAAA,UACVE,UADU,GACK,KAAKC,KAAL,CAAWC,SADhB,CACVF,UADU;;AAElB,UAAGA,UAAU,CAACG,MAAX,CAAkBC,MAAlB,GAA2B,CAA9B,EAAgC;AAC9B,YAAMC,KAAK,GAAGL,UAAU,CAACG,MAAX,CAAkBG,KAAlB,GAA0B,CAA1B,CAAd;AACAV,QAAAA,IAAI,CAACS,KAAD,CAAJ,CAAYE,IAAZ,CAAiB,YAAM;AACrBP,UAAAA,UAAU,CAACQ,MAAX,CAAkBH,KAAlB;AACD,SAFD;AAGD;AACF;AATH;AAAA;AAAA,gCAWc;AAAA,UACFL,UADE,GACa,KAAKC,KAAL,CAAWC,SADxB,CACFF,UADE;AAEV,UAAMS,MAAM,GAAGT,UAAU,CAACG,MAAX,CAAkBO,MAAlB,CAAyB,UAAAL,KAAK;AAAA,eAAIA,KAAK,CAACM,IAAN,KAAe,OAAnB;AAAA,OAA9B,CAAf;;AACA,UAAIF,MAAM,CAACL,MAAX,EAAmB;AACjBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,MAAM,CAACL,MAApC;AACD;AACF;AAjBH;AAAA;AAAA,6BAmBU;AACN,WAAKU,SAAL;AACA,aACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AAxBH;;AAAA;AAAA,EAAgCpB,KAAK,CAACqB,SAAtC","sourcesContent":["import React from 'react';\nimport swal from 'sweetalert';\nimport { inject, observer } from \"mobx-react\";\n\n@inject(\"RootStore\")\n@observer\nexport class SweetAlert extends React.Component {\n  componentWillReact(){\n    const { alertStore } = this.props.RootStore\n    if(alertStore.alerts.length > 0){\n      const alert = alertStore.alerts.slice()[0]\n      swal(alert).then(() => {\n        alertStore.remove(alert)\n      })\n    }\n  }\n\n  logErrors() {\n    const { alertStore } = this.props.RootStore\n    const errors = alertStore.alerts.filter(alert => alert.type === 'error')\n    if (errors.length) {\n      console.log('Found errors:', errors.length)\n    }\n  }\n\n  render(){\n    this.logErrors()\n    return (\n      <div style={{display: 'none'}} />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}